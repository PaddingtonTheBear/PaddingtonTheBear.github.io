var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.27,1,1.72]],["body/components/AppComponent.html",[0,1.686,1,2.088,2,0.19,3,0.19,4,1.626,5,1.626,6,1.626,7,1.626,8,0.139,9,1.346,10,1.188,11,3.254,12,3.254,13,1.346,14,3.254,15,3.254,16,1.827,17,2.603,18,3.254,19,2.603,20,2.603,21,0.19,22,0.74,23,2.529,24,1.827,25,2.284,26,2.287,27,2.529,28,3.72,29,1.226,30,3.72,31,2.088,32,3.72,33,3.72,34,3.72,35,2.284,36,3.72,37,3.72,38,2.603,39,0.74,40,1.626,41,1.233,42,1.366,43,2.603,44,0.981,45,0.037,46,0.634,47,0.698,48,0.444,49,1.626,50,1.635,51,2.436,52,1.626,53,1.626,54,4.341,55,1.188,56,1.717,57,2.658,58,2.379,59,2.603,60,0.981,61,3.254,62,2.076,63,1.982,64,4.341,65,3.078,66,3.72,67,2.603,68,0.029,69,1.314,70,3.72,71,3.078,72,2.603,73,2.603,74,2.603,75,2.603,76,2.558,77,1.626,78,2.154,79,1.717,80,1.461,81,0.981,82,2.603,83,2.603,84,2.603,85,3.078,86,2.154,87,3.254,88,2.603,89,1.461,90,2.154,91,2.154,92,1.626,93,2.796,94,2.603,95,1.016,96,2.603,97,1.402,98,2.603,99,2.603,100,2.603,101,1.461,102,1.982,103,1.314,104,1.461,105,2.603,106,1.461,107,0.981,108,2.603,109,2.603,110,2.603,111,2.603,112,1.078,113,1.078,114,2.603,115,3.078,116,3.72,117,0.952,118,1.626,119,2.192,120,1.396,121,1.626,122,1.626,123,1.626,124,1.626,125,1.698,126,3.078,127,1.878,128,0.981,129,1.626,130,0.719,131,0.42,132,0.558,133,1.626,134,0.913,135,1.626,136,1.626,137,1.626,138,1.346,139,1.626,140,0.381,141,0.742,142,0.164,143,0.071,144,1.626,145,3.72,146,2.558,147,3.72,148,2.088,149,3.72,150,1.626,151,3.72,152,1.626,153,3.72,154,1.626,155,1.626,156,1.626,157,1.423,158,1.626,159,1.626,160,2.603,161,1.626,162,2.603,163,1.626,164,1.626,165,1.626,166,1.626,167,1.626,168,1.626,169,2.603,170,1.626,171,2.603,172,1.626,173,2.603,174,2.603,175,2.603,176,1.626,177,2.603,178,1.626,179,1.626,180,3.254,181,1.626,182,3.72,183,1.626,184,1.626,185,1.626,186,1.626,187,3.72,188,1.461,189,2.603,190,2.603,191,2.603,192,2.603,193,2.603,194,2.603,195,1.023,196,2.603,197,2.603,198,2.603,199,3.72,200,1.626,201,1.626,202,1.626,203,0.015]],["title/modules/AppModule.html",[204,1.155,205,1.928]],["body/modules/AppModule.html",[1,3.44,2,0.433,3,0.433,8,0.317,45,0.037,68,0.028,130,0.912,131,0.955,138,3.063,142,0.477,143,0.161,195,2.328,203,0.028,204,1.779,205,3.834,206,2.078,207,3.711,208,3.27,209,2.65,210,3.063,211,3.063,212,3.063,213,3.063,214,3.246,215,3.246,216,3.37,217,2.642,218,1.395,219,3.701,220,4.721,221,1.395,222,3.37,223,4.721,224,3.907,225,2.642,226,4.721,227,3.701,228,3.701,229,3.701,230,3.063,231,3.701]],["title/interfaces/Cache.html",[232,0.133,233,1.155]],["body/interfaces/Cache.html",[0,1.735,2,0.237,3,0.237,8,0.173,16,1.134,21,0.237,22,0.526,24,1.134,29,1.791,39,0.574,41,0.574,42,0.966,45,0.038,46,0.638,47,0.271,48,0.345,50,1.921,55,0.923,56,1.699,57,1.134,58,2.171,60,1.41,62,1.55,63,0.923,68,0.018,69,1.02,79,1.578,80,2.1,81,1.791,89,2.1,93,2.776,95,1.408,97,1.921,101,1.134,102,0.923,103,1.02,104,1.134,106,1.134,107,0.761,112,1.735,113,1.735,117,1.193,125,0.923,127,1.889,128,1.699,130,0.793,131,0.522,132,0.693,140,0.473,142,0.204,143,0.088,188,2.776,203,0.018,218,0.761,221,0.761,232,0.206,233,1.921,234,0.963,235,1.134,236,0.761,237,2.1,238,1.699,239,1.941,240,2.837,241,1.484,242,2.021,243,1.278,244,1.941,245,2.531,246,0.722,247,1.558,248,1.271,249,1.162,250,1.134,251,1.162,252,1.134,253,1.162,254,1.134,255,1.162,256,1.134,257,1.271,258,1.271,259,1.271,260,1.732,261,1.134,262,1.271,263,1.271,264,1.271,265,1.271,266,1.134,267,1.271,268,1.271,269,0.837,270,1.134,271,1.134,272,1.271,273,1.278,274,1.271,275,1.735,276,1.162,277,1.271,278,1.134,279,1.271,280,1.271,281,1.134,282,1.271,283,1.271,284,1.941,285,1.271,286,1.134,287,2.277,288,2.35,289,1.271,290,1.271,291,1.271,292,1.02,293,2.277,294,1.271,295,1.271,296,1.271,297,1.271,298,1.271,299,1.271,300,1.271,301,1.271,302,1.271,303,1.271,304,1.278,305,1.271,306,1.271,307,1.271,308,1.271,309,1.271,310,0.761,311,1.271,312,1.271,313,2.1,314,1.271,315,1.134,316,2.441,317,2.668,318,1.271,319,1.134,320,1.271,321,1.134,322,1.271,323,1.134,324,1.271,325,1.134,326,1.271,327,1.134,328,1.271,329,1.134,330,2.668,331,1.271,332,1.134,333,1.271,334,1.134,335,1.271,336,1.02,337,1.134,338,2.668,339,1.732,340,1.271,341,1.134,342,1.271,343,1.134,344,1.271,345,1.409,346,1.271,347,1.271,348,1.271,349,1.271,350,1.271,351,1.271,352,1.02,353,1.02]],["title/classes/Company.html",[23,1.547,143,0.133]],["body/classes/Company.html",[2,0.414,3,0.414,8,0.303,10,2.093,21,0.414,22,0.782,23,2.315,39,1.005,42,1.475,44,1.332,45,0.037,46,0.974,47,0.766,48,0.992,68,0.027,95,1.104,117,1.438,119,1.785,120,1.745,130,0.696,140,0.827,141,1.614,142,0.463,143,0.199,157,1.104,203,0.027,232,0.154,241,1.681,354,2.524,355,3.594,356,2.815,357,2.457,358,3.508,359,2.323,360,2.315,361,4.584,362,2.524,363,2.717,364,3.536,365,3.536,366,3.536,367,3.793,368,3.536,369,1.727,370,1.785,371,1.785,372,1.785,373,1.785,374,1.785]],["title/modules/CrudServiceModule.html",[204,1.155,214,1.72]],["body/modules/CrudServiceModule.html",[2,0.435,3,0.435,8,0.318,41,1.645,45,0.037,68,0.028,130,0.904,131,0.96,142,0.478,143,0.161,195,2.338,203,0.028,204,1.784,206,2.086,207,3.379,208,2.338,209,2.924,214,3.471,216,3.379,217,2.654,218,1.401,222,3.379,230,3.076,234,1.161,249,2.181,250,2.086,251,2.181,252,2.086,253,2.181,254,2.086,255,2.181,256,2.086,375,3.076,376,3.076,377,3.717,378,4.734,379,3.076,380,2.086]],["title/injectables/DataCreate.html",[246,0.717,249,1.155]],["body/injectables/DataCreate.html",[2,0.247,3,0.247,8,0.18,21,0.247,22,0.543,25,2.711,29,1.89,31,2.154,35,2.154,39,0.905,41,1.425,42,1.365,44,2.03,45,0.038,46,0.824,47,0.734,48,0.824,50,1.89,51,2.154,55,2.206,56,1.446,60,1.2,62,0.873,63,1.454,68,0.019,76,1.787,78,2.634,79,1.2,81,1.2,91,2.634,107,1.731,112,2.078,113,2.078,128,1.82,130,0.733,131,0.544,132,0.722,134,1.182,142,0.213,143,0.167,146,1.787,148,1.787,157,1.613,203,0.019,221,0.794,232,0.138,233,0.794,234,1.613,236,0.794,238,1.992,243,1.772,246,0.898,249,1.2,269,1.319,273,1.319,276,0.794,304,0.873,310,1.2,315,1.787,316,2.499,317,3.024,319,1.787,321,1.787,345,1.454,380,1.182,381,1.743,382,3.184,383,3.184,384,3.184,385,2.003,386,1.325,387,3.184,388,3.184,389,5.548,390,2.106,391,2.106,392,1.787,393,3.184,394,3.838,395,3.184,396,3.184,397,2.634,398,2.003,399,1.787,400,2.003,401,2.003,402,2.273,403,2.106,404,2.106,405,2.003,406,2.106,407,1.325,408,1.325,409,1.064,410,1.325,411,1.325,412,2.414,413,3.838,414,2.414,415,3.176,416,3.184,417,2.003,418,3.838,419,3.184,420,3.184,421,3.184,422,3.838,423,2.003,424,1.325,425,1.325,426,1.325,427,1.325,428,1.325,429,1.504,430,2.106,431,2.003,432,1.325,433,2.106,434,2.106,435,2.106,436,1.325,437,1.743,438,2.106,439,1.325,440,2.106,441,2.106]],["title/injectables/DataDelete.html",[246,0.717,251,1.155]],["body/injectables/DataDelete.html",[2,0.228,3,0.228,8,0.167,21,0.228,22,0.511,25,2.629,29,1.838,31,2.052,35,2.052,39,0.852,41,1.386,42,1.26,44,1.988,45,0.038,46,0.799,47,0.72,48,0.799,50,1.838,51,2.052,56,1.377,62,0.806,63,1.669,65,3.025,68,0.018,76,1.682,79,1.129,81,1.129,107,1.671,112,2.186,113,2.186,130,0.711,131,0.502,132,0.668,134,1.092,142,0.197,143,0.159,146,1.682,148,1.682,157,1.385,203,0.018,218,1.377,221,0.733,232,0.13,233,1.377,234,1.573,236,0.733,238,1.988,243,1.701,246,0.855,251,1.129,269,1.514,270,1.092,273,1.242,275,1.242,276,0.733,281,2.052,286,1.092,288,2.052,292,1.846,304,0.806,310,1.129,316,2.498,336,2.664,337,1.682,338,3.163,339,2.489,341,1.682,343,1.682,345,1.369,380,1.092,385,1.885,386,1.224,392,1.682,397,3.025,398,1.885,399,1.682,400,1.885,401,2.789,402,1.389,405,1.885,407,1.224,408,1.224,409,0.983,410,1.224,411,1.224,412,2.299,414,2.299,417,1.885,423,1.885,424,1.224,425,1.224,426,1.224,427,1.224,428,1.224,429,1.389,431,1.885,432,1.224,436,1.224,439,1.224,442,1.61,443,2.997,444,2.997,445,2.997,446,2.997,447,2.997,448,1.946,449,1.946,450,2.997,451,1.946,452,1.946,453,1.946,454,1.946,455,3.025,456,1.389,457,3.875,458,2.997,459,3.655,460,3.655,461,2.997,462,3.655,463,3.655,464,3.655,465,3.655,466,3.655,467,3.669,468,4.434,469,3.669,470,4.434,471,1.946,472,1.946,473,1.946]],["title/injectables/DataRead.html",[246,0.717,253,1.155]],["body/injectables/DataRead.html",[2,0.228,3,0.228,8,0.167,21,0.228,22,0.512,25,2.63,29,1.989,31,1.684,35,2.053,39,0.852,41,1.387,42,1.301,44,2.024,45,0.038,46,0.832,47,0.748,48,0.832,50,1.948,51,2.053,56,1.378,60,1.13,62,0.807,68,0.018,69,0.984,76,1.684,79,1.13,81,2.209,86,2.482,97,1.13,102,1.876,107,1.839,117,1.319,128,1.13,130,0.711,131,0.503,132,0.668,134,1.094,142,0.197,143,0.159,146,2.74,148,1.684,157,1.677,203,0.018,221,0.734,232,0.13,234,1.614,236,0.734,237,1.684,238,1.548,243,1.702,245,3.214,246,0.856,253,1.13,260,1.094,261,1.684,269,1.516,273,1.702,275,0.807,276,1.378,304,1.243,310,1.13,316,2.429,323,1.684,325,1.684,327,1.684,352,1.515,380,1.094,385,1.887,386,1.226,398,1.887,399,1.684,400,1.887,401,1.887,402,2.611,405,1.887,407,1.226,408,1.226,409,0.984,410,1.226,411,1.226,412,2.791,414,2.301,415,3.027,417,2.301,423,1.887,424,1.226,425,1.226,426,1.226,427,1.226,428,1.226,431,2.301,432,1.226,436,1.226,437,2.482,439,1.226,456,1.391,467,1.612,474,1.612,475,3,476,3,477,3,478,3,479,3,480,1.948,481,3,482,1.948,483,1.948,484,3,485,3,486,2.482,487,3,488,1.948,489,1.948,490,1.948,491,4.436,492,3.027,493,3.658,494,3.658,495,3,496,3.658,497,3,498,1.948,499,4.108,500,1.948,501,3,502,1.948,503,1.948,504,1.948,505,1.948,506,1.948,507,1.948,508,1.948,509,1.948,510,1.948,511,1.948]],["title/injectables/DataUpdate.html",[246,0.717,255,1.155]],["body/injectables/DataUpdate.html",[2,0.254,3,0.254,8,0.186,21,0.254,22,0.555,25,2.741,29,1.908,31,2.191,35,2.191,39,0.924,41,1.439,42,1.307,44,2.045,45,0.038,46,0.833,47,0.738,48,0.833,50,1.963,51,2.191,56,1.471,60,0.816,68,0.019,71,1.793,76,1.825,79,1.225,81,1.225,107,1.752,112,1.926,113,1.926,120,1.115,128,0.816,130,0.741,131,0.559,132,0.743,134,1.216,142,0.219,143,0.17,146,1.825,148,1.825,157,1.525,203,0.019,221,0.816,232,0.141,233,0.816,234,1.627,236,0.816,238,1.908,243,1.798,246,0.914,255,1.225,269,1.347,273,1.347,275,2.158,276,0.816,304,0.898,310,1.225,316,2.531,329,1.825,330,3.338,332,1.825,334,1.825,345,1.485,380,1.216,385,2.046,386,1.363,392,1.825,398,2.046,399,1.825,400,2.046,401,2.046,405,2.046,407,1.363,408,1.363,409,1.094,410,1.363,411,1.363,412,2.456,414,2.456,417,1.363,423,2.046,424,1.363,425,1.363,426,1.363,427,1.363,428,1.363,429,1.547,431,2.046,432,1.363,436,1.363,439,1.363,455,1.793,456,1.547,457,2.691,469,1.793,492,2.691,512,1.793,513,3.252,514,3.252,515,3.252,516,3.252,517,3.252,518,2.167,519,2.167,520,2.167,521,3.252,522,2.167,523,2.167,524,4.339,525,3.904,526,3.252,527,2.167,528,2.167,529,2.167,530,2.167,531,3.904,532,2.167,533,2.167,534,3.252,535,2.167,536,1.793,537,2.167,538,2.167,539,2.167,540,2.167]],["title/interfaces/ICompany.html",[232,0.133,355,1.928]],["body/interfaces/ICompany.html",[2,0.453,3,0.453,8,0.331,10,1.765,21,0.453,22,0.828,23,1.952,45,0.037,46,0.977,47,0.711,48,0.997,68,0.028,95,1.207,117,1.427,120,1.664,130,0.736,140,0.905,141,1.765,142,0.49,143,0.168,157,1.207,203,0.028,232,0.211,241,1.207,354,2.76,355,3.499,356,2.893,357,1.765,358,3.605,359,1.765,360,1.952,363,2.809,367,3.199,369,1.998,370,1.952,371,2.45,372,1.952,373,1.952,374,1.952]],["title/interfaces/IDataBaseObj.html",[232,0.133,369,1.155]],["body/interfaces/IDataBaseObj.html",[2,0.497,3,0.497,8,0.364,13,3.511,21,0.497,22,0.876,45,0.036,46,0.876,47,0.689,48,0.876,58,2.347,68,0.03,97,2.083,117,1.4,142,0.429,203,0.03,232,0.24,236,1.599,241,1.794,352,2.142,357,2.624,369,1.936,392,2.381,541,3.511,542,4.242,543,4.242,544,3.511,545,3.511,546,5.139,547,5.139]],["title/interfaces/IProduct.html",[232,0.133,548,1.928]],["body/interfaces/IProduct.html",[2,0.406,3,0.406,8,0.297,10,1.582,21,0.406,22,0.772,26,1.582,45,0.037,46,0.945,47,0.813,48,1.045,68,0.027,95,1.082,117,1.454,120,1.552,130,0.687,140,0.811,141,1.582,142,0.457,143,0.15,157,1.082,203,0.027,232,0.196,241,1.082,356,2.798,357,1.582,359,1.582,360,1.75,363,2.964,369,1.898,370,1.75,371,2.284,372,1.75,373,1.75,374,1.75,548,3.36,549,2.474,550,4.585,551,4.585,552,4.585,553,4.585,554,4.419,555,2.868]],["title/interfaces/ISeller.html",[232,0.133,556,1.928]],["body/interfaces/ISeller.html",[2,0.453,3,0.453,8,0.331,10,1.765,21,0.453,22,0.828,27,1.952,45,0.037,46,0.977,47,0.711,48,0.997,68,0.028,95,1.207,117,1.427,120,1.664,130,0.736,140,0.905,141,1.765,142,0.49,143,0.168,157,1.207,203,0.028,232,0.211,241,1.207,356,2.893,357,1.765,358,3.605,359,1.765,360,1.952,363,2.809,369,1.998,370,1.952,371,2.45,372,1.952,373,1.952,374,1.952,556,3.499,557,2.76,558,3.199]],["title/interfaces/LoadingMap.html",[232,0.133,293,1.547]],["body/interfaces/LoadingMap.html",[0,1.87,2,0.237,3,0.237,8,0.173,16,1.136,21,0.237,22,0.345,24,1.136,29,1.792,39,0.575,41,0.575,42,0.967,45,0.038,46,0.527,47,0.271,48,0.345,50,1.922,55,0.924,56,1.7,57,1.136,58,2.171,60,1.411,62,1.551,63,1.41,68,0.018,69,1.021,79,1.579,80,2.102,81,1.792,89,1.733,93,2.776,95,1.485,97,1.922,101,1.136,102,0.924,103,1.021,104,1.136,106,1.136,107,0.762,112,1.551,113,1.551,117,1.194,125,0.924,127,1.891,128,1.7,130,0.793,131,0.522,132,0.694,140,0.473,142,0.204,143,0.088,188,2.863,203,0.018,218,0.762,221,0.762,232,0.207,233,1.792,234,0.964,235,1.136,236,0.762,237,1.733,238,1.579,239,1.273,240,2.838,241,1.485,243,1.279,244,1.942,245,2.533,246,0.723,247,1.559,248,1.273,249,1.163,250,1.136,251,1.163,252,1.136,253,1.163,254,1.136,255,1.163,256,1.136,257,1.273,258,1.273,259,1.273,260,1.733,261,1.136,262,1.273,263,1.273,264,1.273,265,1.273,266,1.136,267,1.273,268,1.273,269,0.838,270,1.136,271,1.136,272,1.273,273,1.279,274,1.273,275,1.736,276,1.163,277,1.273,278,1.136,279,1.273,280,1.273,281,1.136,282,1.273,283,1.273,284,2.355,285,1.273,286,1.136,287,2.278,288,2.669,289,1.273,290,1.273,291,1.273,292,1.021,293,2.401,294,1.273,295,1.273,296,1.273,297,1.273,298,1.273,299,1.273,300,1.273,301,1.273,302,1.273,303,1.273,304,1.279,305,1.273,306,1.273,307,1.273,308,1.273,309,1.273,310,0.762,311,1.273,312,1.273,313,2.102,314,1.273,315,1.136,316,2.442,317,2.669,318,1.273,319,1.136,320,1.273,321,1.136,322,1.273,323,1.136,324,1.273,325,1.136,326,1.273,327,1.136,328,1.273,329,1.136,330,2.669,331,1.273,332,1.136,333,1.273,334,1.136,335,1.273,336,1.021,337,1.136,338,2.669,339,1.733,340,1.273,341,1.136,342,1.273,343,1.136,344,1.273,345,1.71,346,1.273,347,1.273,348,1.273,349,1.273,350,1.273,351,1.273,352,1.021,353,1.021,559,2.023]],["title/modules/MaterialModule.html",[204,1.155,215,1.72]],["body/modules/MaterialModule.html",[2,0.414,3,0.414,8,0.303,45,0.037,68,0.027,130,0.772,131,0.913,142,0.463,143,0.154,203,0.027,204,1.332,209,1.985,215,2.573,222,3.273,560,3.536,561,5.087,562,5.087,563,5.087,564,5.087,565,5.087,566,5.087,567,5.087,568,5.087,569,5.087,570,5.087,571,5.087,572,5.087,573,5.382,574,5.087,575,5.087,576,5.087,577,5.087,578,5.087,579,5.087,580,5.087,581,5.087,582,5.087,583,5.087,584,5.087,585,5.087,586,5.087,587,5.087,588,4.584,589,5.087,590,5.087,591,5.087,592,5.087,593,5.087,594,5.087,595,2.926,596,3.536,597,3.536,598,3.536]],["title/classes/Product.html",[26,1.399,143,0.133]],["body/classes/Product.html",[2,0.379,3,0.379,8,0.277,10,1.974,21,0.379,22,0.737,26,1.974,39,0.919,42,1.527,44,1.218,45,0.037,46,0.95,47,0.818,48,0.551,68,0.025,95,1.01,117,1.458,119,1.633,120,1.67,130,0.656,140,0.757,141,1.476,142,0.437,143,0.188,157,1.01,203,0.025,232,0.14,241,1.623,356,2.735,357,2.373,359,2.223,360,2.182,362,2.308,363,2.92,369,1.629,370,1.633,371,1.633,372,1.633,373,1.633,374,1.633,548,3.506,549,2.308,550,4.482,551,4.482,552,4.482,553,4.482,554,4.301,555,3.577,599,4.322,600,3.233,601,3.233,602,3.233,603,3.233,604,3.233,605,3.233,606,3.233,607,3.233]],["title/classes/Seller.html",[27,1.547,143,0.133]],["body/classes/Seller.html",[2,0.414,3,0.414,8,0.303,10,2.093,21,0.414,22,0.782,27,2.315,39,1.005,42,1.475,44,1.332,45,0.037,46,0.974,47,0.766,48,0.992,68,0.027,95,1.104,117,1.438,119,1.785,120,1.745,130,0.696,140,0.827,141,1.614,142,0.463,143,0.199,157,1.104,203,0.027,232,0.154,241,1.681,356,2.815,357,2.457,358,3.508,359,2.323,360,2.315,362,2.524,363,2.717,369,1.727,370,1.785,371,1.785,372,1.785,373,1.785,374,1.785,556,3.594,557,2.524,558,3.793,608,4.584,609,3.536,610,3.536,611,3.536,612,3.536]],["title/interfaces/SubjectMap.html",[232,0.133,287,1.547]],["body/interfaces/SubjectMap.html",[0,1.848,2,0.231,3,0.231,8,0.169,16,1.107,21,0.231,22,0.336,24,1.107,29,1.774,39,0.56,41,0.56,42,1.067,45,0.038,46,0.516,47,0.406,48,0.336,50,1.906,55,0.901,56,1.681,57,1.7,58,2.037,60,1.389,62,1.848,63,0.901,68,0.018,69,1.529,79,1.558,80,2.321,81,1.774,89,2.069,93,2.898,95,1.47,97,1.955,101,1.7,102,0.901,103,0.996,104,1.107,106,1.107,107,0.743,112,1.527,113,1.527,117,1.184,125,0.901,127,2.252,128,1.774,130,0.787,131,0.509,132,0.677,140,0.462,142,0.199,143,0.086,188,2.643,203,0.018,218,0.743,221,0.743,232,0.204,233,1.774,234,0.946,235,1.107,236,0.743,237,1.7,238,1.774,239,1.241,240,2.601,241,1.47,243,1.255,244,1.905,245,2.504,246,0.709,247,1.861,248,1.241,249,1.141,250,1.107,251,1.141,252,1.107,253,1.141,254,1.107,255,1.141,256,1.107,257,1.241,258,1.241,259,1.241,260,1.7,261,1.107,262,1.241,263,1.241,264,1.241,265,1.241,266,1.107,267,1.241,268,1.241,269,0.817,270,1.107,271,1.107,272,1.241,273,1.255,274,1.241,275,1.713,276,1.141,277,1.241,278,1.107,279,1.241,280,1.241,281,1.107,282,1.241,283,1.241,284,1.905,285,1.241,286,1.107,287,2.377,288,2.321,289,1.241,290,1.241,291,1.241,292,0.996,293,2.252,294,1.241,295,1.241,296,1.241,297,1.241,298,1.241,299,1.241,300,1.241,301,1.241,302,1.241,303,1.241,304,1.527,305,1.241,306,1.241,307,1.241,308,1.241,309,1.241,310,0.743,311,1.241,312,1.241,313,2.321,314,1.241,315,1.107,316,2.433,317,2.643,318,1.241,319,1.107,320,1.241,321,1.107,322,1.241,323,1.107,324,1.241,325,1.107,326,1.241,327,1.107,328,1.241,329,1.107,330,2.643,331,1.241,332,1.107,333,1.241,334,1.107,335,1.241,336,0.996,337,1.107,338,2.643,339,1.7,340,1.241,341,1.107,342,1.241,343,1.107,344,1.241,345,1.683,346,1.905,347,1.905,348,1.905,349,1.905,350,1.905,351,1.905,352,0.996,353,0.996,613,1.973,614,1.973]],["title/interfaces/TableCRUD.html",[232,0.133,353,1.547]],["body/interfaces/TableCRUD.html",[0,1.724,2,0.234,3,0.234,8,0.171,16,1.12,21,0.234,22,0.633,24,1.12,29,1.782,39,0.567,41,0.567,42,0.789,45,0.038,46,0.521,47,0.557,48,0.34,50,1.913,55,0.911,56,1.69,57,1.12,58,2.047,60,1.567,62,1.538,63,0.911,68,0.018,69,1.007,79,1.567,80,2.084,81,1.782,89,1.715,93,2.768,95,1.4,97,1.913,101,1.12,102,0.911,103,1.007,104,1.12,106,1.12,107,0.752,112,1.538,113,1.538,117,1.152,125,1.395,127,2.1,128,1.69,130,0.79,131,0.515,132,0.684,140,0.467,142,0.202,143,0.087,188,2.655,203,0.018,218,0.752,221,0.752,232,0.214,233,2.036,234,0.623,235,1.12,236,0.752,237,1.715,238,1.567,239,1.255,240,2.617,241,1.4,243,1.266,244,1.922,245,2.517,246,0.715,247,1.543,248,1.255,249,1.151,250,1.12,251,1.151,252,1.12,253,1.151,254,1.12,255,1.151,256,1.12,257,1.255,258,1.255,259,1.255,260,1.715,261,1.12,262,1.255,263,1.255,264,1.255,265,1.255,266,1.12,267,1.255,268,1.255,269,0.827,270,1.12,271,1.12,272,1.255,273,1.266,274,1.255,275,1.724,276,1.151,277,1.255,278,1.12,279,1.255,280,1.255,281,1.12,282,1.255,283,1.255,284,1.922,285,1.255,286,1.12,287,2.682,288,2.335,289,1.255,290,1.255,291,1.255,292,1.007,293,2.682,294,1.255,295,1.255,296,1.255,297,1.255,298,1.255,299,1.255,300,1.255,301,1.255,302,1.255,303,1.255,304,1.266,305,1.255,306,1.255,307,1.255,308,1.255,309,1.255,310,0.752,311,1.255,312,1.255,313,2.084,314,1.255,315,1.12,316,2.437,317,2.655,318,1.255,319,1.12,320,1.255,321,1.12,322,1.255,323,1.12,324,1.255,325,1.12,326,1.255,327,1.12,328,1.255,329,1.12,330,2.655,331,1.255,332,1.12,333,1.255,334,1.12,335,1.255,336,1.007,337,1.12,338,2.655,339,1.715,340,1.255,341,1.12,342,1.255,343,1.12,344,1.255,345,1.395,346,1.255,347,1.255,348,1.255,349,1.255,350,1.255,351,1.255,352,1.543,353,1.543]],["title/classes/TableMap.html",[140,0.717,143,0.133]],["body/classes/TableMap.html",[2,0.476,3,0.476,8,0.348,21,0.476,22,0.854,23,2.989,26,2.703,27,2.989,42,1.4,45,0.037,47,0.727,68,0.029,117,1.386,119,2.739,120,1.861,140,1.172,142,0.411,143,0.217,203,0.029,359,2.788,615,4.686,616,3.363,617,4.064,618,4.064,619,4.064]],["title/coverage.html",[620,3.45]],["body/coverage.html",[0,1.444,1,1.957,8,0.299,9,2.885,23,1.76,26,1.592,27,1.76,41,0.991,45,0.037,47,0.467,68,0.027,97,1.314,128,1.314,140,0.816,143,0.232,203,0.027,232,0.255,233,1.314,234,1.872,235,3.116,246,1.299,247,2.293,249,1.314,251,1.314,253,1.314,255,1.314,287,1.76,293,1.76,353,1.76,354,3.243,355,2.193,369,1.314,381,2.885,409,1.76,442,2.885,474,2.885,512,2.885,541,2.885,548,2.193,549,3.243,556,2.193,557,3.243,615,2.885,616,2.885,620,2.885,621,2.885,622,3.486,623,3.486,624,3.486,625,3.486,626,5.995,627,4.542,628,5.052,629,3.486,630,3.486,631,3.486,632,3.486,633,5.052,634,5.052,635,3.486,636,3.486,637,2.885,638,3.486,639,5.052,640,5.052,641,3.486,642,3.486,643,2.885,644,2.489,645,5.052,646,2.885,647,3.243,648,2.885,649,3.486]],["title/dependencies.html",[206,2.067,650,2.566]],["body/dependencies.html",[45,0.037,68,0.03,125,1.942,131,1.098,132,1.459,203,0.03,206,2.387,208,2.675,224,4.259,225,3.674,379,3.519,595,3.519,651,4.253,652,4.253,653,4.253,654,5.147,655,6.11,656,4.253,657,4.253,658,4.253,659,4.253,660,4.253,661,4.253,662,4.253,663,4.253,664,4.253,665,4.253,666,4.253,667,4.253,668,4.253,669,4.253,670,4.253]],["title/miscellaneous/functions.html",[644,2.629,671,1.614]],["body/miscellaneous/functions.html",[21,0.555,44,1.786,45,0.034,46,0.808,48,0.808,68,0.032,203,0.032,234,1.48,409,2.771,643,3.922,644,3.384,671,2.981,672,4.739,673,4.739,674,4.739]],["title/index.html",[21,0.301,675,2.123,676,2.123]],["body/index.html",[45,0.032,55,2.463,58,2.101,68,0.032,97,1.734,102,2.101,103,2.323,125,2.101,126,4.464,127,2.889,203,0.032,275,1.907,313,2.583,336,2.323,392,2.583,399,2.583,677,4.601,678,4.601,679,4.601,680,4.601,681,4.601,682,4.601,683,4.601,684,4.601]],["title/license.html",[675,2.123,676,2.123,685,2.123]],["body/license.html",[8,0.335,45,0.029,60,1.841,68,0.029,90,3.235,93,1.974,115,3.235,203,0.029,209,2.194,218,1.473,266,2.194,271,2.194,278,2.194,292,1.974,486,4.044,536,4.622,545,4.411,621,3.235,685,3.235,686,3.909,687,5.331,688,3.909,689,3.909,690,3.909,691,4.886,692,3.909,693,3.909,694,3.909,695,3.909,696,4.886,697,3.909,698,6.066,699,3.909,700,4.886,701,5.331,702,3.909,703,3.909,704,3.909,705,3.909,706,3.909,707,3.909,708,3.909,709,3.909,710,3.909,711,3.909,712,3.909,713,3.909,714,4.886,715,4.886,716,3.909,717,3.909,718,4.886,719,3.909,720,3.909,721,3.909,722,3.909,723,3.909,724,3.909,725,3.909,726,3.909,727,3.909,728,3.909,729,3.909,730,3.909,731,3.909,732,3.909,733,3.909,734,3.909,735,3.909,736,3.909]],["title/modules.html",[204,1.571]],["body/modules.html",[45,0.032,68,0.032,203,0.032,204,1.781,205,2.973,214,2.653,215,2.653,225,3.911,544,3.911,737,5.479,738,5.479,739,5.786,740,4.726]],["title/overview.html",[741,3.45]],["body/overview.html",[0,1.649,1,3.353,41,1.527,45,0.036,68,0.029,85,3.294,142,0.402,143,0.173,195,2.504,203,0.029,204,1.862,205,3.828,206,2.234,207,2.842,208,2.504,209,2.234,210,3.294,211,3.294,212,3.294,213,3.294,214,3.487,215,3.017,216,3.528,217,2.842,218,1.5,232,0.173,246,0.932,249,2.025,251,2.025,253,2.025,255,2.025,375,3.294,376,3.294,637,3.294,741,3.294,742,3.98,743,3.98,744,3.98]],["title/miscellaneous/variables.html",[647,2.629,671,1.614]],["body/miscellaneous/variables.html",[21,0.522,26,2.418,45,0.037,47,0.71,68,0.031,119,2.674,120,1.816,203,0.031,238,2.201,247,3.055,276,1.68,310,1.68,646,3.691,647,3.184,648,3.691,671,2.806,745,4.46,746,4.46,747,4.46,748,4.46]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["1/1",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["2.0.8",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":689,"title":{},"body":{"license.html":{}}}],["21",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":742,"title":{},"body":{"overview.html":{}}}],["3/14",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":637,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["4.1.0",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":743,"title":{},"body":{"overview.html":{}}}],["6.3.3",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["7.0.0",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":744,"title":{},"body":{"overview.html":{}}}],["_base",{"_index":370,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["_creat",{"_index":250,"title":{},"body":{"interfaces/Cache.html":{},"modules/CrudServiceModule.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["_delet",{"_index":252,"title":{},"body":{"interfaces/Cache.html":{},"modules/CrudServiceModule.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["_read",{"_index":254,"title":{},"body":{"interfaces/Cache.html":{},"modules/CrudServiceModule.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["_updat",{"_index":256,"title":{},"body":{"interfaces/Cache.html":{},"modules/CrudServiceModule.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["abov",{"_index":713,"title":{},"body":{"license.html":{}}}],["action",{"_index":732,"title":{},"body":{"license.html":{}}}],["actual",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_compon",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["add",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["ag",{"_index":550,"title":{},"body":{"interfaces/IProduct.html":{},"classes/Product.html":{}}}],["again",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["against",{"_index":399,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"index.html":{}}}],["and/or",{"_index":707,"title":{},"body":{"license.html":{}}}],["angular",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":379,"title":{},"body":{"modules/CrudServiceModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["angular/compil",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"dependencies.html":{}}}],["angular/form",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":595,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":314,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app.compon",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["append",{"_index":437,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataRead.html":{}}}],["appli",{"_index":261,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataRead.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["applic",{"_index":346,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["application/json",{"_index":265,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["appmodul",{"_index":205,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":735,"title":{},"body":{"license.html":{}}}],["array",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["assign",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataCreate.html":{}}}],["associ",{"_index":699,"title":{},"body":{"license.html":{}}}],["async",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["asynchon",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["asynchonsouli",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["attach",{"_index":498,"title":{},"body":{"injectables/DataRead.html":{}}}],["attempt",{"_index":678,"title":{},"body":{"index.html":{}}}],["auth",{"_index":267,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["author",{"_index":266,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["avail",{"_index":544,"title":{},"body":{"interfaces/IDataBaseObj.html":{},"modules.html":{}}}],["await",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["away",{"_index":279,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["base",{"_index":307,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["be",{"_index":291,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["befor",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataDelete.html":{}}}],["bodi",{"_index":429,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataUpdate.html":{}}}],["boolean",{"_index":288,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["bootstrap",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/CrudServiceModule.html":{},"dependencies.html":{},"overview.html":{}}}],["break",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["brows",{"_index":739,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":400,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["button",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["c",{"_index":688,"title":{},"body":{"license.html":{}}}],["cach",{"_index":233,"title":{"interfaces/Cache.html":{}},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["cacheandnotifycr",{"_index":382,"title":{},"body":{"injectables/DataCreate.html":{}}}],["cacheandnotifycreated(model",{"_index":388,"title":{},"body":{"injectables/DataCreate.html":{}}}],["cacheandnotifydelet",{"_index":443,"title":{},"body":{"injectables/DataDelete.html":{}}}],["cacheandnotifydelete(model",{"_index":447,"title":{},"body":{"injectables/DataDelete.html":{}}}],["cacheandnotifyread",{"_index":475,"title":{},"body":{"injectables/DataRead.html":{}}}],["cacheandnotifyread(model",{"_index":479,"title":{},"body":{"injectables/DataRead.html":{}}}],["cacheandnotifyupd",{"_index":513,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["cacheandnotifyupdated(model",{"_index":517,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["call",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["case",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["catch",{"_index":436,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["catcherror",{"_index":407,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["catcherror(handlehttperror",{"_index":425,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["charg",{"_index":695,"title":{},"body":{"license.html":{}}}],["claim",{"_index":729,"title":{},"body":{"license.html":{}}}],["class",{"_index":143,"title":{"classes/Company.html":{},"classes/Product.html":{},"classes/Seller.html":{},"classes/TableMap.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_crudservicemodul",{"_index":375,"title":{},"body":{"modules/CrudServiceModule.html":{},"overview.html":{}}}],["cluster_crudservicemodule_provid",{"_index":376,"title":{},"body":{"modules/CrudServiceModule.html":{},"overview.html":{}}}],["collect",{"_index":546,"title":{},"body":{"interfaces/IDataBaseObj.html":{}}}],["commonmodul",{"_index":378,"title":{},"body":{"modules/CrudServiceModule.html":{}}}],["compani",{"_index":23,"title":{"classes/Company.html":{}},"body":{"components/AppComponent.html":{},"classes/Company.html":{},"interfaces/ICompany.html":{},"classes/TableMap.html":{},"coverage.html":{}}}],["company.nam",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["companykey",{"_index":551,"title":{},"body":{"interfaces/IProduct.html":{},"classes/Product.html":{}}}],["companyob",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["companypromis",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["companyr",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["complet",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"overview.html":{}}}],["component'",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["component_templ",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["concern",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["condit",{"_index":712,"title":{},"body":{"license.html":{}}}],["connect",{"_index":736,"title":{},"body":{"license.html":{}}}],["console.error(err",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"classes/Company.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["construct",{"_index":398,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["constructor(d",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(http",{"_index":386,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["constructor(prop",{"_index":360,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["constructor(publ",{"_index":596,"title":{},"body":{"modules/MaterialModule.html":{}}}],["content",{"_index":264,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["continuin",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["contract",{"_index":733,"title":{},"body":{"license.html":{}}}],["copi",{"_index":536,"title":{},"body":{"injectables/DataUpdate.html":{},"license.html":{}}}],["copyobjtoupd",{"_index":534,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["copyright",{"_index":687,"title":{},"body":{"license.html":{}}}],["core",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":306,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["correspond",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["coverag",{"_index":620,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"index.html":{}}}],["create(model",{"_index":315,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["createbulk",{"_index":441,"title":{},"body":{"injectables/DataCreate.html":{}}}],["createob",{"_index":383,"title":{},"body":{"injectables/DataCreate.html":{}}}],["createobs(model",{"_index":319,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["createpromis",{"_index":384,"title":{},"body":{"injectables/DataCreate.html":{}}}],["createpromise(model",{"_index":321,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["createsearchparam",{"_index":476,"title":{},"body":{"injectables/DataRead.html":{}}}],["createsearchparams(queri",{"_index":481,"title":{},"body":{"injectables/DataRead.html":{}}}],["crud",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"index.html":{}}}],["crudservicemodul",{"_index":214,"title":{"modules/CrudServiceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CrudServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["damag",{"_index":730,"title":{},"body":{"license.html":{}}}],["data",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"index.html":{}}}],["data.servic",{"_index":380,"title":{},"body":{"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["databas",{"_index":392,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataUpdate.html":{},"interfaces/IDataBaseObj.html":{},"index.html":{}}}],["datacr",{"_index":249,"title":{"injectables/DataCreate.html":{}},"body":{"interfaces/Cache.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"overview.html":{}}}],["datadelet",{"_index":251,"title":{"injectables/DataDelete.html":{}},"body":{"interfaces/Cache.html":{},"modules/CrudServiceModule.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"overview.html":{}}}],["dataread",{"_index":253,"title":{"injectables/DataRead.html":{}},"body":{"interfaces/Cache.html":{},"modules/CrudServiceModule.html":{},"injectables/DataRead.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"overview.html":{}}}],["dataservic",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"overview.html":{}}}],["dataservice'",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["dataupd",{"_index":255,"title":{"injectables/DataUpdate.html":{}},"body":{"interfaces/Cache.html":{},"modules/CrudServiceModule.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":363,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["datecr",{"_index":356,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["dateobtain",{"_index":552,"title":{},"body":{"interfaces/IProduct.html":{},"classes/Product.html":{}}}],["db",{"_index":345,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["dc",{"_index":294,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["dd",{"_index":297,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["deal",{"_index":700,"title":{},"body":{"license.html":{}}}],["declar",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/CrudServiceModule.html":{},"overview.html":{}}}],["default",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"classes/Company.html":{},"classes/Product.html":{},"classes/Seller.html":{},"classes/TableMap.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{}}}],["definit",{"_index":485,"title":{},"body":{"injectables/DataRead.html":{}}}],["delet",{"_index":336,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"index.html":{}}}],["delete(model",{"_index":337,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["deletebulk",{"_index":473,"title":{},"body":{"injectables/DataDelete.html":{}}}],["deleteob",{"_index":444,"title":{},"body":{"injectables/DataDelete.html":{}}}],["deleteobs(model",{"_index":341,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["deletepromis",{"_index":445,"title":{},"body":{"injectables/DataDelete.html":{}}}],["deletepromise(model",{"_index":343,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["depend",{"_index":206,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CrudServiceModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":542,"title":{},"body":{"interfaces/IDataBaseObj.html":{}}}],["descript",{"_index":236,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["despit",{"_index":280,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["determin",{"_index":270,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["differ",{"_index":684,"title":{},"body":{"index.html":{}}}],["direct",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["display",{"_index":289,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["distribut",{"_index":705,"title":{},"body":{"license.html":{}}}],["document",{"_index":621,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":465,"title":{},"body":{"injectables/DataDelete.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["dr",{"_index":295,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["ds",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["du",{"_index":296,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["dynam",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"dependencies.html":{},"index.html":{}}}],["each",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["easier",{"_index":681,"title":{},"body":{"index.html":{}}}],["el.key",{"_index":469,"title":{},"body":{"injectables/DataDelete.html":{},"injectables/DataUpdate.html":{}}}],["element",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["endpoint",{"_index":258,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["environ",{"_index":247,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.serverurl",{"_index":259,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["environments/environ",{"_index":248,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["err",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["error",{"_index":674,"title":{},"body":{"miscellaneous/functions.html":{}}}],["event",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["everyth",{"_index":464,"title":{},"body":{"injectables/DataDelete.html":{}}}],["exampl",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["exampleselect",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["expect",{"_index":352,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataRead.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["export",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"overview.html":{}}}],["express",{"_index":720,"title":{},"body":{"license.html":{}}}],["extend",{"_index":371,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["extern",{"_index":284,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["fa",{"_index":598,"title":{},"body":{"modules/MaterialModule.html":{}}}],["faker",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["fals",{"_index":310,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":497,"title":{},"body":{"injectables/DataRead.html":{}}}],["fetch(url",{"_index":428,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["field",{"_index":543,"title":{},"body":{"interfaces/IDataBaseObj.html":{}}}],["figur",{"_index":305,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"coverage.html":{},"license.html":{}}}],["filter",{"_index":463,"title":{},"body":{"injectables/DataDelete.html":{}}}],["find",{"_index":530,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["first",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["fit",{"_index":723,"title":{},"body":{"license.html":{}}}],["flexibl",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["follow",{"_index":711,"title":{},"body":{"license.html":{}}}],["forkjoin",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["forkjoin([productob",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["free",{"_index":694,"title":{},"body":{"license.html":{}}}],["fron",{"_index":450,"title":{},"body":{"injectables/DataDelete.html":{}}}],["front",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["frontend",{"_index":456,"title":{},"body":{"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["function",{"_index":644,"title":{"miscellaneous/functions.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":710,"title":{},"body":{"license.html":{}}}],["gener",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataCreate.html":{}}}],["get",{"_index":675,"title":{"index.html":{},"license.html":{}},"body":{}}],["give",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["grant",{"_index":693,"title":{},"body":{"license.html":{}}}],["graph",{"_index":740,"title":{},"body":{"modules.html":{}}}],["hammerj",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["handlehttperror",{"_index":409,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handlehttperror(err",{"_index":423,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["handlehttperror(error",{"_index":673,"title":{},"body":{"miscellaneous/functions.html":{}}}],["header",{"_index":260,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataRead.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["herebi",{"_index":692,"title":{},"body":{"license.html":{}}}],["holder",{"_index":727,"title":{},"body":{"license.html":{}}}],["html",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":273,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["http://localhost:3000",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":243,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["httpclientmodul",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":244,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["httpopt",{"_index":491,"title":{},"body":{"injectables/DataRead.html":{}}}],["httpoption",{"_index":263,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["httpopts.param",{"_index":493,"title":{},"body":{"injectables/DataRead.html":{}}}],["httpparam",{"_index":245,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataRead.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["hydrat",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["icompani",{"_index":355,"title":{"interfaces/ICompany.html":{}},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"coverage.html":{}}}],["icon",{"_index":290,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["id",{"_index":357,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["idatabaseobj",{"_index":369,"title":{"interfaces/IDataBaseObj.html":{}},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{},"coverage.html":{}}}],["identifi",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["impli",{"_index":721,"title":{},"body":{"license.html":{}}}],["import",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["includ",{"_index":545,"title":{},"body":{"interfaces/IDataBaseObj.html":{},"license.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["individu",{"_index":351,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{}}}],["inject",{"_index":246,"title":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"overview.html":{}}}],["instanceof",{"_index":500,"title":{},"body":{"injectables/DataRead.html":{}}}],["interest",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["interfac",{"_index":232,"title":{"interfaces/Cache.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}},"body":{"interfaces/Cache.html":{},"classes/Company.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"overview.html":{}}}],["interface'",{"_index":484,"title":{},"body":{"injectables/DataRead.html":{}}}],["investig",{"_index":350,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["iproduct",{"_index":548,"title":{"interfaces/IProduct.html":{}},"body":{"interfaces/IProduct.html":{},"classes/Product.html":{},"coverage.html":{}}}],["isel",{"_index":556,"title":{"interfaces/ISeller.html":{}},"body":{"interfaces/ISeller.html":{},"classes/Seller.html":{},"coverage.html":{}}}],["isoptimist",{"_index":282,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["js",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["json.stringify(objtocr",{"_index":430,"title":{},"body":{"injectables/DataCreate.html":{}}}],["json.stringify(objtodelet",{"_index":471,"title":{},"body":{"injectables/DataDelete.html":{}}}],["json.stringify(objtoupd",{"_index":529,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["key",{"_index":397,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{}}}],["keyvalpair",{"_index":505,"title":{},"body":{"injectables/DataRead.html":{}}}],["keyvalpair[1",{"_index":508,"title":{},"body":{"injectables/DataRead.html":{}}}],["kind",{"_index":719,"title":{},"body":{"license.html":{}}}],["legend",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CrudServiceModule.html":{},"overview.html":{}}}],["liabil",{"_index":731,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":728,"title":{},"body":{"license.html":{}}}],["licens",{"_index":685,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":486,"title":{},"body":{"injectables/DataRead.html":{},"license.html":{}}}],["list",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["liter",{"_index":613,"title":{},"body":{"interfaces/SubjectMap.html":{}}}],["load",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["loadingmap",{"_index":293,"title":{"interfaces/LoadingMap.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["local",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataUpdate.html":{}}}],["localobjtoupd",{"_index":531,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["locat",{"_index":358,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/ISeller.html":{},"classes/Seller.html":{}}}],["make",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"index.html":{}}}],["mani",{"_index":313,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"index.html":{}}}],["map",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["map.t",{"_index":616,"title":{},"body":{"classes/TableMap.html":{},"coverage.html":{}}}],["map.ts:2",{"_index":618,"title":{},"body":{"classes/TableMap.html":{}}}],["map.ts:3",{"_index":617,"title":{},"body":{"classes/TableMap.html":{}}}],["map.ts:4",{"_index":619,"title":{},"body":{"classes/TableMap.html":{}}}],["matautocompletemodul",{"_index":561,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodul",{"_index":562,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodul",{"_index":563,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodul",{"_index":564,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":565,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matchipsmodul",{"_index":566,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodul",{"_index":567,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogmodul",{"_index":568,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material.modul",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["materialmodul",{"_index":215,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodul",{"_index":569,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodul",{"_index":570,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodul",{"_index":571,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodul",{"_index":572,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistri",{"_index":573,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistry.registerfontclassalias('fontawesom",{"_index":597,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":574,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":575,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodul",{"_index":576,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodul",{"_index":577,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodul",{"_index":578,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodul",{"_index":579,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":580,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodul",{"_index":581,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodul",{"_index":582,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodul",{"_index":583,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodul",{"_index":584,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodul",{"_index":585,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodul",{"_index":586,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodul",{"_index":587,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarref",{"_index":588,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodul",{"_index":589,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodul",{"_index":590,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodul",{"_index":591,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodul",{"_index":592,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodul",{"_index":593,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodul",{"_index":594,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mean",{"_index":277,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["merchant",{"_index":722,"title":{},"body":{"license.html":{}}}],["merg",{"_index":703,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IDataBaseObj.html":{}}}],["method",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["miscellan",{"_index":671,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":686,"title":{},"body":{"license.html":{}}}],["model",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["model(el",{"_index":511,"title":{},"body":{"injectables/DataRead.html":{}}}],["model(objtocr",{"_index":413,"title":{},"body":{"injectables/DataCreate.html":{}}}],["models/compani",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["models/product",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["models/sel",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["modifi",{"_index":292,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["modul",{"_index":204,"title":{"modules/AppModule.html":{},"modules/CrudServiceModule.html":{},"modules/MaterialModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CrudServiceModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":393,"title":{},"body":{"injectables/DataCreate.html":{}}}],["new",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["newmodelobj",{"_index":389,"title":{},"body":{"injectables/DataCreate.html":{}}}],["newmodelobj.key",{"_index":418,"title":{},"body":{"injectables/DataCreate.html":{}}}],["newparam",{"_index":499,"title":{},"body":{"injectables/DataRead.html":{}}}],["ngmodul",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/CrudServiceModule.html":{},"modules/MaterialModule.html":{}}}],["ngondestroy",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["ngoninit",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["noninfring",{"_index":726,"title":{},"body":{"license.html":{}}}],["notic",{"_index":714,"title":{},"body":{"license.html":{}}}],["notif",{"_index":348,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["notifi",{"_index":286,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["notifyon",{"_index":454,"title":{},"body":{"injectables/DataDelete.html":{}}}],["number",{"_index":554,"title":{},"body":{"interfaces/IProduct.html":{},"classes/Product.html":{}}}],["object",{"_index":238,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"miscellaneous/variables.html":{}}}],["object'",{"_index":521,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["object.assign",{"_index":492,"title":{},"body":{"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["object.assign(copyobjtoupd",{"_index":535,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["object.assign(localobjtoupd",{"_index":538,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["object.keys(props).foreach(prop",{"_index":372,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["object.keys(tablemap).foreach(tablenam",{"_index":308,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["objtocr",{"_index":317,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["objtodelet",{"_index":338,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["objtodelete.id",{"_index":460,"title":{},"body":{"injectables/DataDelete.html":{}}}],["objtodelete.key",{"_index":470,"title":{},"body":{"injectables/DataDelete.html":{}}}],["objtoupd",{"_index":330,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["objtoupdate.key",{"_index":533,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["observ",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["obtain",{"_index":697,"title":{},"body":{"license.html":{}}}],["on",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["onc",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["ondestroy",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["oper",{"_index":683,"title":{},"body":{"index.html":{}}}],["optimist",{"_index":455,"title":{},"body":{"injectables/DataDelete.html":{},"injectables/DataUpdate.html":{}}}],["optimst",{"_index":272,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["option",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":285,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["origin",{"_index":553,"title":{},"body":{"interfaces/IProduct.html":{},"classes/Product.html":{}}}],["otherwis",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["out",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Cache.html":{},"modules/CrudServiceModule.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":741,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":650,"title":{"dependencies.html":{}},"body":{}}],["paddingtonthebear",{"_index":690,"title":{},"body":{"license.html":{}}}],["param",{"_index":269,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["param.split",{"_index":506,"title":{},"body":{"injectables/DataRead.html":{}}}],["paramet",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"classes/Company.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"classes/Product.html":{},"classes/Seller.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":724,"title":{},"body":{"license.html":{}}}],["patch",{"_index":528,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["perform",{"_index":682,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":691,"title":{},"body":{"license.html":{}}}],["permit",{"_index":709,"title":{},"body":{"license.html":{}}}],["person",{"_index":696,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":424,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["pipe(takeuntil(this.unsub",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["portion",{"_index":717,"title":{},"body":{"license.html":{}}}],["post",{"_index":394,"title":{},"body":{"injectables/DataCreate.html":{}}}],["privat",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["product",{"_index":26,"title":{"classes/Product.html":{}},"body":{"components/AppComponent.html":{},"interfaces/IProduct.html":{},"classes/Product.html":{},"classes/TableMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.nam",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["productob",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["productpromis",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["productr",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["project",{"_index":677,"title":{},"body":{"index.html":{}}}],["promis",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["promise.al",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["promise.all([productpromis",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["prop",{"_index":362,"title":{},"body":{"classes/Company.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["properti",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{}}}],["props[prop",{"_index":373,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["provid",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/CrudServiceModule.html":{},"modules/MaterialModule.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":257,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["public",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["publish",{"_index":704,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":725,"title":{},"body":{"license.html":{}}}],["queri",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["query.split",{"_index":503,"title":{},"body":{"injectables/DataRead.html":{}}}],["re",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["read",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataRead.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"index.html":{}}}],["read(model",{"_index":323,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataRead.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["readob",{"_index":477,"title":{},"body":{"injectables/DataRead.html":{}}}],["readobs(model",{"_index":325,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataRead.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["readpromis",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataRead.html":{}}}],["readpromise(model",{"_index":327,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataRead.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["readwithob",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["readwithpromis",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["readwithsubject",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["receiv",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["refer",{"_index":537,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["remov",{"_index":462,"title":{},"body":{"injectables/DataDelete.html":{}}}],["request",{"_index":262,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["res.foreach((el",{"_index":509,"title":{},"body":{"injectables/DataRead.html":{}}}],["res.id",{"_index":421,"title":{},"body":{"injectables/DataCreate.html":{}}}],["res.json",{"_index":432,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["res.key",{"_index":419,"title":{},"body":{"injectables/DataCreate.html":{}}}],["res.objectid",{"_index":420,"title":{},"body":{"injectables/DataCreate.html":{}}}],["res[0",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["res[1",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["res[2",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/CrudServiceModule.html":{},"overview.html":{}}}],["resjson",{"_index":431,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["resjson.id",{"_index":435,"title":{},"body":{"injectables/DataCreate.html":{}}}],["resjson.key",{"_index":433,"title":{},"body":{"injectables/DataCreate.html":{}}}],["resjson.objectid",{"_index":434,"title":{},"body":{"injectables/DataCreate.html":{}}}],["resolut",{"_index":395,"title":{},"body":{"injectables/DataCreate.html":{}}}],["respons",{"_index":401,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["restrict",{"_index":702,"title":{},"body":{"license.html":{}}}],["result",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["reusabl",{"_index":679,"title":{},"body":{"index.html":{}}}],["right",{"_index":278,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["rxj",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["same",{"_index":466,"title":{},"body":{"injectables/DataDelete.html":{}}}],["searchparam",{"_index":501,"title":{},"body":{"injectables/DataRead.html":{}}}],["searchparams.set(keyvalpair[0",{"_index":507,"title":{},"body":{"injectables/DataRead.html":{}}}],["select",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["sell",{"_index":708,"title":{},"body":{"license.html":{}}}],["seller",{"_index":27,"title":{"classes/Seller.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ISeller.html":{},"classes/Seller.html":{},"classes/TableMap.html":{},"coverage.html":{}}}],["seller.nam",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["sellerob",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["sellerpromis",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["sellerr",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["send",{"_index":347,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["server",{"_index":281,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["serverurl",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["servic",{"_index":680,"title":{},"body":{"index.html":{}}}],["service.modul",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["service.module.t",{"_index":377,"title":{},"body":{"modules/CrudServiceModule.html":{}}}],["service/_create.t",{"_index":381,"title":{},"body":{"injectables/DataCreate.html":{},"coverage.html":{}}}],["service/_create.ts:11",{"_index":387,"title":{},"body":{"injectables/DataCreate.html":{}}}],["service/_create.ts:17",{"_index":406,"title":{},"body":{"injectables/DataCreate.html":{}}}],["service/_create.ts:26",{"_index":391,"title":{},"body":{"injectables/DataCreate.html":{}}}],["service/_create.ts:46",{"_index":403,"title":{},"body":{"injectables/DataCreate.html":{}}}],["service/_create.ts:60",{"_index":404,"title":{},"body":{"injectables/DataCreate.html":{}}}],["service/_create.ts:79",{"_index":390,"title":{},"body":{"injectables/DataCreate.html":{}}}],["service/_delete.t",{"_index":442,"title":{},"body":{"injectables/DataDelete.html":{},"coverage.html":{}}}],["service/_delete.ts:11",{"_index":446,"title":{},"body":{"injectables/DataDelete.html":{}}}],["service/_delete.ts:17",{"_index":453,"title":{},"body":{"injectables/DataDelete.html":{}}}],["service/_delete.ts:27",{"_index":449,"title":{},"body":{"injectables/DataDelete.html":{}}}],["service/_delete.ts:51",{"_index":451,"title":{},"body":{"injectables/DataDelete.html":{}}}],["service/_delete.ts:69",{"_index":452,"title":{},"body":{"injectables/DataDelete.html":{}}}],["service/_delete.ts:92",{"_index":448,"title":{},"body":{"injectables/DataDelete.html":{}}}],["service/_read.t",{"_index":474,"title":{},"body":{"injectables/DataRead.html":{},"coverage.html":{}}}],["service/_read.ts:108",{"_index":480,"title":{},"body":{"injectables/DataRead.html":{}}}],["service/_read.ts:11",{"_index":478,"title":{},"body":{"injectables/DataRead.html":{}}}],["service/_read.ts:17",{"_index":490,"title":{},"body":{"injectables/DataRead.html":{}}}],["service/_read.ts:26",{"_index":483,"title":{},"body":{"injectables/DataRead.html":{}}}],["service/_read.ts:49",{"_index":488,"title":{},"body":{"injectables/DataRead.html":{}}}],["service/_read.ts:68",{"_index":489,"title":{},"body":{"injectables/DataRead.html":{}}}],["service/_read.ts:90",{"_index":482,"title":{},"body":{"injectables/DataRead.html":{}}}],["service/_update.t",{"_index":512,"title":{},"body":{"injectables/DataUpdate.html":{},"coverage.html":{}}}],["service/_update.ts:11",{"_index":516,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["service/_update.ts:17",{"_index":519,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["service/_update.ts:26",{"_index":520,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["service/_update.ts:48",{"_index":522,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["service/_update.ts:59",{"_index":523,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["service/_update.ts:75",{"_index":518,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["service/crud",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/CrudServiceModule.html":{}}}],["service/data.servic",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["service/data.service.t",{"_index":235,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["service/data.service.ts:126",{"_index":614,"title":{},"body":{"interfaces/SubjectMap.html":{}}}],["service/data.service.ts:136",{"_index":559,"title":{},"body":{"interfaces/LoadingMap.html":{}}}],["service/data.service.ts:143",{"_index":242,"title":{},"body":{"interfaces/Cache.html":{}}}],["service/utilities.t",{"_index":643,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdataservic",{"_index":385,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["setdataservice(d",{"_index":405,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["setuplocalprop",{"_index":303,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["shall",{"_index":715,"title":{},"body":{"license.html":{}}}],["shared/crud",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["shared/t",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["similar",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["simpl",{"_index":237,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataRead.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["singl",{"_index":349,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["softwar",{"_index":698,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{}}}],["splitqueri",{"_index":502,"title":{},"body":{"injectables/DataRead.html":{}}}],["splitquery.foreach(param",{"_index":504,"title":{},"body":{"injectables/DataRead.html":{}}}],["spread",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataRead.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["src/.../environment.prod.t",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utilities.t",{"_index":672,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.t",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:100",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:112",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:117",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:77",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/material.module.t",{"_index":560,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/models/_base.t",{"_index":541,"title":{},"body":{"interfaces/IDataBaseObj.html":{},"coverage.html":{}}}],["src/app/models/company.t",{"_index":354,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"coverage.html":{}}}],["src/app/models/company.ts:11",{"_index":368,"title":{},"body":{"classes/Company.html":{}}}],["src/app/models/company.ts:13",{"_index":364,"title":{},"body":{"classes/Company.html":{}}}],["src/app/models/company.ts:15",{"_index":366,"title":{},"body":{"classes/Company.html":{}}}],["src/app/models/company.ts:16",{"_index":365,"title":{},"body":{"classes/Company.html":{}}}],["src/app/models/company.ts:17",{"_index":361,"title":{},"body":{"classes/Company.html":{}}}],["src/app/models/product.t",{"_index":549,"title":{},"body":{"interfaces/IProduct.html":{},"classes/Product.html":{},"coverage.html":{}}}],["src/app/models/product.ts:16",{"_index":606,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.ts:18",{"_index":603,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.ts:20",{"_index":604,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.ts:21",{"_index":607,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.ts:22",{"_index":605,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.ts:23",{"_index":600,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.ts:24",{"_index":601,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.ts:25",{"_index":602,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.ts:27",{"_index":599,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/seller.t",{"_index":557,"title":{},"body":{"interfaces/ISeller.html":{},"classes/Seller.html":{},"coverage.html":{}}}],["src/app/models/seller.ts:11",{"_index":612,"title":{},"body":{"classes/Seller.html":{}}}],["src/app/models/seller.ts:13",{"_index":609,"title":{},"body":{"classes/Seller.html":{}}}],["src/app/models/seller.ts:15",{"_index":611,"title":{},"body":{"classes/Seller.html":{}}}],["src/app/models/seller.ts:16",{"_index":610,"title":{},"body":{"classes/Seller.html":{}}}],["src/app/models/seller.ts:17",{"_index":608,"title":{},"body":{"classes/Seller.html":{}}}],["src/app/shared/crud",{"_index":234,"title":{},"body":{"interfaces/Cache.html":{},"modules/CrudServiceModule.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/t",{"_index":615,"title":{},"body":{"classes/TableMap.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":676,"title":{"index.html":{},"license.html":{}},"body":{}}],["statement",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":359,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{},"classes/TableMap.html":{}}}],["stopnotifi",{"_index":339,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["store",{"_index":547,"title":{},"body":{"interfaces/IDataBaseObj.html":{}}}],["string",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"injectables/DataRead.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["subject",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["subjectmap",{"_index":287,"title":{"interfaces/SubjectMap.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["sublicens",{"_index":706,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["subscript",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["substanti",{"_index":716,"title":{},"body":{"license.html":{}}}],["support",{"_index":737,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":738,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["switchreadmethod",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["switchreadmethod(ev",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["system",{"_index":283,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["t",{"_index":316,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["tabl",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataRead.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"index.html":{}}}],["table'",{"_index":240,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["tablecrud",{"_index":353,"title":{"interfaces/TableCRUD.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["tablemap",{"_index":140,"title":{"classes/TableMap.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"coverage.html":{}}}],["tablemap.compani",{"_index":367,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{}}}],["tablemap.product",{"_index":555,"title":{},"body":{"interfaces/IProduct.html":{},"classes/Product.html":{}}}],["tablemap.sel",{"_index":558,"title":{},"body":{"interfaces/ISeller.html":{},"classes/Seller.html":{}}}],["tablenam",{"_index":241,"title":{},"body":{"interfaces/Cache.html":{},"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["tabnam",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["takeuntil",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["tap",{"_index":408,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["tap((r",{"_index":426,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["term",{"_index":274,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.cache[tablemap[tablenam",{"_index":311,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.cacheandnotifycreated(model",{"_index":422,"title":{},"body":{"injectables/DataCreate.html":{}}}],["this.cacheandnotifydelete(model",{"_index":458,"title":{},"body":{"injectables/DataDelete.html":{}}}],["this.cacheandnotifyread(model",{"_index":496,"title":{},"body":{"injectables/DataRead.html":{}}}],["this.cacheandnotifyupdated(model",{"_index":524,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["this.compani",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createsearchparams(queri",{"_index":494,"title":{},"body":{"injectables/DataRead.html":{}}}],["this.d",{"_index":411,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["this.dc.create(model",{"_index":318,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.dc.createobs(model",{"_index":320,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.dc.createpromise(model",{"_index":322,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.dc.setdataservice(thi",{"_index":298,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.dd.delete(model",{"_index":340,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.dd.deleteobs(model",{"_index":342,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.dd.deletepromise(model",{"_index":344,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.dd.setdataservice(thi",{"_index":301,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.dr.read(model",{"_index":324,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.dr.readobs(model",{"_index":326,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.dr.readpromise(model",{"_index":328,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.dr.setdataservice(thi",{"_index":299,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.ds.cache[model.tablenam",{"_index":467,"title":{},"body":{"injectables/DataDelete.html":{},"injectables/DataRead.html":{}}}],["this.ds.cache[model.tablename].filter(el",{"_index":468,"title":{},"body":{"injectables/DataDelete.html":{}}}],["this.ds.cache[model.tablename].find(el",{"_index":532,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["this.ds.cache[model.tablename].push(new",{"_index":510,"title":{},"body":{"injectables/DataRead.html":{}}}],["this.ds.cache[model.tablename].push(object.assign",{"_index":438,"title":{},"body":{"injectables/DataCreate.html":{}}}],["this.ds.endpoint}${model.tablenam",{"_index":415,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataRead.html":{}}}],["this.ds.endpoint}${model.tablename}/${objtodelete.key",{"_index":459,"title":{},"body":{"injectables/DataDelete.html":{}}}],["this.ds.endpoint}${model.tablename}/${objtoupdate.key",{"_index":525,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["this.ds.httpopt",{"_index":417,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["this.ds.httpoptions).subscrib",{"_index":527,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["this.ds.isoptimist",{"_index":457,"title":{},"body":{"injectables/DataDelete.html":{},"injectables/DataUpdate.html":{}}}],["this.ds.loadingmap[model.tablenam",{"_index":412,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["this.ds.read",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.read(compani",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.read(product",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.read(sel",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.readobs(compani",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.readobs(product",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.readobs(sel",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.readpromise(compani",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.readpromise(product",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.readpromise(sel",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.subjectmap[model.tablename].many.next(this.ds.cache[model.tablenam",{"_index":439,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["this.ds.subjectmap[model.tablename].one.next(localobjtoupd",{"_index":539,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["this.ds.subjectmap[model.tablename].one.next(newmodelobj",{"_index":440,"title":{},"body":{"injectables/DataCreate.html":{}}}],["this.ds.subjectmap[model.tablename].one.next(objtodelet",{"_index":472,"title":{},"body":{"injectables/DataDelete.html":{}}}],["this.ds.subjectmap[tablemap.companies].mani",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.subjectmap[tablemap.products].mani",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.subjectmap[tablemap.sellers].mani",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["this.du.setdataservice(thi",{"_index":300,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.du.update(model",{"_index":331,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.du.updateobs(model",{"_index":333,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.du.updatepromise(model",{"_index":335,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.http.delete(url",{"_index":461,"title":{},"body":{"injectables/DataDelete.html":{}}}],["this.http.get(url",{"_index":495,"title":{},"body":{"injectables/DataRead.html":{}}}],["this.http.patch(url",{"_index":526,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["this.http.post(url",{"_index":416,"title":{},"body":{"injectables/DataCreate.html":{}}}],["this.loadingmap[tablemap[tablenam",{"_index":309,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.product",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["this.readwithob",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["this.readwithpromis",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["this.readwithsubject",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sel",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setuplocalprop",{"_index":302,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.subjectmap[tablemap[tablenam",{"_index":312,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.unsub.complet",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["this.unsub.next",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["this[prop",{"_index":374,"title":{},"body":{"classes/Company.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{}}}],["time",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["titl",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":304,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["token",{"_index":268,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["tort",{"_index":734,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["tri",{"_index":427,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["true",{"_index":276,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["type",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"classes/Company.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"interfaces/LoadingMap.html":{},"classes/Product.html":{},"classes/Seller.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unsub",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["updat",{"_index":275,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"index.html":{}}}],["update(model",{"_index":329,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["updatebulk",{"_index":540,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["updateob",{"_index":514,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["updateobs(model",{"_index":332,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["updatepromis",{"_index":515,"title":{},"body":{"injectables/DataUpdate.html":{}}}],["updatepromise(model",{"_index":334,"title":{},"body":{"interfaces/Cache.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["url",{"_index":414,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["urlsearchparam",{"_index":487,"title":{},"body":{"injectables/DataRead.html":{}}}],["us",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["util",{"_index":410,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["uuid",{"_index":396,"title":{},"body":{"injectables/DataCreate.html":{}}}],["valu",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"classes/Company.html":{},"injectables/DataUpdate.html":{},"interfaces/ICompany.html":{},"interfaces/IProduct.html":{},"interfaces/ISeller.html":{},"classes/Product.html":{},"classes/Seller.html":{},"classes/TableMap.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["variabl",{"_index":647,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{},"injectables/DataUpdate.html":{}}}],["wait",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["warranti",{"_index":718,"title":{},"body":{"license.html":{}}}],["whether",{"_index":271,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["whose",{"_index":239,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["without",{"_index":701,"title":{},"body":{"license.html":{}}}],["ye",{"_index":402,"title":{},"body":{"injectables/DataCreate.html":{},"injectables/DataDelete.html":{},"injectables/DataRead.html":{}}}],["zone.j",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/CrudServiceModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companies\n                            \n                            \n                                    Public\n                                DS\n                            \n                            \n                                products\n                            \n                            \n                                sellers\n                            \n                            \n                                title\n                            \n                            \n                                    Private\n                                unsub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                readWithObs\n                            \n                            \n                                    Async\n                                readWithPromise\n                            \n                            \n                                readWithSubjects\n                            \n                            \n                                switchReadMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(DS: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        DS\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readWithObs\n                            \n                            \n                        \n                    \n                \n                \n                    \nreadWithObs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            First we create an observable for each data type we are interested in.\nThen we use the forkJoin to subscribe and wait for all observables to complete before continuining.\nOnce we get a result, we spread the results into our component's local properties.\nThis gives us more flexiblity for waiting for all results to complete before continuining (similar to async-await).\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            readWithPromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        readWithPromise()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            First we generate a promise for each one of our data types.\nWe then can either query all asynchonously with Promise.all or add an await to wait for each to complete 1 by 1.\nIf we await each readPromise, then the productPromise will be a JSON array, otherwise it will be a promise\nAfter we get the results, we assign them to our component's local properties.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readWithSubjects\n                            \n                            \n                        \n                    \n                \n                \n                    \nreadWithSubjects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            First we subscribe to a subject in the DataService's subject map that corresponds with the table that we are concerned with.\nThis subscription will handle the receiving of any read data.\nThen we make calls to this.DS.read with the table TS model to actually read the data.\nBecause we are subscribed to the subject, any time we read the data again we will hydrate our front end because of the Subject.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            switchReadMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \nswitchReadMethod(event: Event, tabName: String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        tabName\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companies\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        companies:     Company[]\n\n                    \n                \n                    \n                        \n                            Type :     Company[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            DS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DS:     DataService\n\n                    \n                \n                    \n                        \n                            Type :     DataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        products:     Product[]\n\n                    \n                \n                    \n                        \n                            Type :     Product[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sellers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sellers:     Seller[]\n\n                    \n                \n                    \n                        \n                            Type :     Seller[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'dynamic-angular-crud'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            unsub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unsub:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { forkJoin, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Company } from './models/Company';\nimport { Product } from './models/Product';\nimport { Seller } from './models/Seller';\nimport { DataService } from './shared/crud-service/data.service';\nimport { TableMap } from './shared/table-map';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  private unsub: Subject = new Subject();\n\n  products: Product[] = [];\n  companies: Company[] = [];\n  sellers: Seller[] = [];\n\n  title = 'dynamic-angular-crud';\n\n  constructor(\n    public DS: DataService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * First we subscribe to a subject in the DataService's subject map that corresponds with the table that we are concerned with.\n   * This subscription will handle the receiving of any read data.\n   * Then we make calls to this.DS.read with the table TS model to actually read the data.\n   * Because we are subscribed to the subject, any time we read the data again we will hydrate our front end because of the Subject.\n   */\n  readWithSubjects() {\n    this.DS.subjectMap[TableMap.Products].many\n      .pipe(takeUntil(this.unsub))\n      .subscribe(\n        res => {\n          this.products = res;\n        },\n        err => console.error(err)\n      );\n\n    this.DS.subjectMap[TableMap.Companies].many\n      .pipe(takeUntil(this.unsub))\n      .subscribe(\n        res => {\n          this.companies = res;\n        },\n        err => console.error(err)\n      );\n\n    this.DS.subjectMap[TableMap.Sellers].many\n      .pipe(takeUntil(this.unsub))\n      .subscribe(\n        res => {\n          this.sellers = res;\n        },\n        err => console.error(err)\n      );\n\n    this.DS.read(Product);\n    this.DS.read(Company);\n    this.DS.read(Seller);\n  }\n\n  /**\n   * First we create an observable for each data type we are interested in.\n   * Then we use the forkJoin to subscribe and wait for all observables to complete before continuining.\n   * Once we get a result, we spread the results into our component's local properties.\n   * This gives us more flexiblity for waiting for all results to complete before continuining (similar to async-await).\n   */\n  readWithObs() {\n    const productObs = this.DS.readObs(Product);\n    const companyObs = this.DS.readObs(Company);\n    const sellerObs = this.DS.readObs(Seller);\n\n    forkJoin([productObs, companyObs, sellerObs])\n      .pipe(takeUntil(this.unsub))\n      .subscribe(\n        (res: any) => {\n          this.products = res[0];\n          this.companies = res[1];\n          this.sellers = res[2];\n        },\n        err => console.error(err)\n      );\n  }\n\n  /**\n   * First we generate a promise for each one of our data types.\n   * We then can either query all asynchonously with Promise.all or add an await to wait for each to complete 1 by 1.\n   * If we await each readPromise, then the productPromise will be a JSON array, otherwise it will be a promise\n   * After we get the results, we assign them to our component's local properties.\n   */\n  async readWithPromise() {\n    const productPromise = this.DS.readPromise(Product);\n    const companyPromise = this.DS.readPromise(Company);\n    const sellerPromise = this.DS.readPromise(Seller);\n\n    const [productRes, companyRes, sellerRes] = await Promise.all([productPromise, companyPromise, sellerPromise]);\n\n    this.products = productRes;\n    this.companies = companyRes;\n    this.sellers = sellerRes;\n  }\n\n  ngOnDestroy() {\n    this.unsub.next();\n    this.unsub.complete();\n  }\n\n  switchReadMethod(event: Event, tabName: String) {\n    this.products = [];\n    this.companies = [];\n    this.sellers = [];\n    this.unsub.next();\n\n    switch (tabName) {\n      case 'subject':\n        this.readWithSubjects();\n        break;\n      case 'observable':\n        this.readWithObs();\n        break;\n      case 'promise':\n        this.readWithPromise();\n        break;\n      default:\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n  Dynamic Angular CRUD Example\n\n\nSelect a button to load the list data asynchonsouly by the method indicated on the button!\n\n\n  Subject\n  Observable\n  Promise\n\n\n\n  \n    \n      Products\n    \n    \n      \n        {{product.name}}\n      \n    \n  \n  \n    \n      Companies\n    \n    \n      \n        {{company.name}}\n      \n    \n  \n  \n    \n      Sellers\n    \n    \n      \n        {{seller.name}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Dynamic Angular CRUD ExampleSelect a button to load the list data asynchonsouly by the method indicated on the button!  Subject  Observable  Promise            Products                      {{product.name}}                        Companies                      {{company.name}}                        Sellers                      {{seller.name}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCrudServiceModule\n\nCrudServiceModule\n\nAppModule -->\n\nCrudServiceModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CrudServiceModule\n                            \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material.module';\nimport { CrudServiceModule } from './shared/crud-service/crud-service.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MaterialModule,\n    CrudServiceModule\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cache.html":{"url":"interfaces/Cache.html","title":"interface - Cache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/crud-service/data.service.ts\n        \n\n            \n                Description\n            \n            \n                A simple cache which is an object whose properties is a table name with an array of that table's data loaded into the front end\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [tableName: string]:    any[]\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/crud-service/data.service.ts:143\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\nimport { TableMap } from '../table-map';\nimport { DataCreate } from './_create';\nimport { DataDelete } from './_delete';\nimport { DataRead } from './_read';\nimport { DataUpdate } from './_update';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  endpoint: string = environment.serverUrl;\n\n  // Define header options to be applied to all requests\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // 'Authorization': 'my-auth-token'\n    }),\n    params: new HttpParams()\n  };\n\n  // Determine whether or not to be optimstic with our Http calls in terms of updating the front end. True means update the front end right away despite what the server does.\n  isOptimistic = true;\n\n  // A simple object that is used a cache for any data that has been loaded into the system\n  cache: any = {};\n  // A map of TableName => Subject for external components to subscribe to, in order to be notified of updates to that table's data\n  subjectMap: SubjectMap = {};\n  // A map of TableName => Boolean to components to use for displaying a loading icon when that table's data is being loaded or modified\n  loadingMap: LoadingMap = {};\n\n  constructor(\n    private http: HttpClient,\n    private DC: DataCreate,\n    private DR: DataRead,\n    private DU: DataUpdate,\n    private DD: DataDelete\n  ) {\n    this.DC.setDataService(this);\n    this.DR.setDataService(this);\n    this.DU.setDataService(this);\n    this.DD.setDataService(this);\n\n    this.setupLocalProps();\n  }\n\n  private setupLocalProps() {\n    // TODO: Figure out how to make a subject with the correct TS model based on the table name\n    Object.keys(TableMap).forEach(tableName => {\n      this.loadingMap[TableMap[tableName]] = false;\n      this.cache[TableMap[tableName]] = [];\n      this.subjectMap[TableMap[tableName]] = {\n        many: new Subject(),\n        one: new Subject()\n      };\n    });\n  }\n\n  /**\n   * PUBLIC API\n   */\n\n  // CREATE\n  create(model: T | any, objToCreate?: T | any) {\n    this.DC.create(model, objToCreate);\n  }\n\n  createObs(model: T | any, objToCreate?: T | any): Observable {\n    return this.DC.createObs(model, objToCreate);\n  }\n\n  createPromise(model: T | any, objToCreate: T | any): Promise {\n    return this.DC.createPromise(model, objToCreate);\n  }\n\n  // READ\n  read(model: T | any, query?: HttpParams | String) {\n    this.DR.read(model, query);\n  }\n\n  readObs(model: T | any, query?: HttpParams | String): Observable {\n    return this.DR.readObs(model, query);\n  }\n\n  readPromise(model: T | any, query?: HttpParams | String): Promise {\n    return this.DR.readPromise(model, query);\n  }\n\n  // UPDATE\n  update(model: T | any, objToUpdate: T | any) {\n    this.DU.update(model, objToUpdate);\n  }\n\n  updateObs(model: T | any, objToUpdate: T | any): Observable {\n    return this.DU.updateObs(model, objToUpdate);\n  }\n\n  updatePromise(model: T | any, objToUpdate: T | any): Promise {\n    return this.DU.updatePromise(model, objToUpdate);\n  }\n\n  // DELETE\n  delete(model: T | any, objToDelete: T | any, stopNotify?: boolean) {\n    this.DD.delete(model, objToDelete, stopNotify);\n  }\n  \n  deleteObs(model: T | any, objToDelete: T | any): Observable {\n    return this.DD.deleteObs(model, objToDelete);\n  }\n  \n  deletePromise(model: T | any, objToDelete: T | any): Promise {\n    return this.DD.deletePromise(model, objToDelete);\n  }\n}\n\n/**\n * A mapping of every environment defined DB table to a subject so that CRUD applications can send notifications to all subject subscribers\n * Components can subscribe to the \"many\" subject to receive an array of new objects, or to the \"one\" subject to get a single object\n * TODO: Investigate and Spread this into an individual CRUD subject for each table\n */\ninterface SubjectMap {\n  [tableName: string]: {\n    many: Subject;\n    one: Subject;\n  };\n}\n\n/**\n * A mapping of every DB table to a load boolean so that external components can wait for a table's data to be loaded\n */\ninterface LoadingMap {\n  [tableName: string]: boolean;\n}\n\n/**\n * A simple cache which is an object whose properties is a table name with an array of that table's data loaded into the front end\n */\ninterface Cache {\n  [tableName: string]: any[];\n}\n\n/**\n * An interface for what we expect to be used for dynamic Table CRUD\n */\ninterface TableCRUD {\n  cache: Cache;\n  subjectMap: SubjectMap;\n  loadingMap: LoadingMap;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Company.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ICompany\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dateCreated\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                location\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Static\n                                tableName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICompany)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/Company.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    ICompany\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dateCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCreated:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Company.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Company.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            location\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        location:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Company.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Company.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : TableMap.Companies\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Company.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TableMap } from './../shared/table-map';\nimport { IDataBaseObj } from './_base';\n\nexport interface ICompany extends IDataBaseObj {\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n}\n\nexport class Company implements ICompany {\n    static tableName: string = TableMap.Companies;\n\n    id: string;\n\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n\n    constructor(props: ICompany) {\n        Object.keys(props).forEach(prop => {\n            const value = props[prop];\n            this[prop] = value;\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CrudServiceModule.html":{"url":"modules/CrudServiceModule.html","title":"module - CrudServiceModule","body":"\n                   \n\n\n\n\n  Modules\n  CrudServiceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CrudServiceModule\n\n\n\ncluster_CrudServiceModule_providers\n\n\n\n\nDataCreate\n\nDataCreate\n\n\n\nCrudServiceModule\n\nCrudServiceModule\n\nCrudServiceModule -->\n\nDataCreate->CrudServiceModule\n\n\n\n\n\nDataDelete\n\nDataDelete\n\nCrudServiceModule -->\n\nDataDelete->CrudServiceModule\n\n\n\n\n\nDataRead\n\nDataRead\n\nCrudServiceModule -->\n\nDataRead->CrudServiceModule\n\n\n\n\n\nDataService\n\nDataService\n\nCrudServiceModule -->\n\nDataService->CrudServiceModule\n\n\n\n\n\nDataUpdate\n\nDataUpdate\n\nCrudServiceModule -->\n\nDataUpdate->CrudServiceModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/crud-service/crud-service.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     DataCreate\n                            \n                            \n                                     DataDelete\n                            \n                            \n                                     DataRead\n                            \n                            \n                                     DataService\n                            \n                            \n                                     DataUpdate\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DataCreate } from './_create';\nimport { DataDelete } from './_delete';\nimport { DataRead } from './_read';\nimport { DataUpdate } from './_update';\nimport { DataService } from './data.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    DataService,\n    DataCreate,\n    DataRead,\n    DataUpdate,\n    DataDelete\n  ]\n})\nexport class CrudServiceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataCreate.html":{"url":"injectables/DataCreate.html","title":"injectable - DataCreate","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/crud-service/_create.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                DS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cacheAndNotifyCreated\n                            \n                            \n                                create\n                            \n                            \n                                createObs\n                            \n                            \n                                    Async\n                                createPromise\n                            \n                            \n                                setDataService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/crud-service/_create.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheAndNotifyCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cacheAndNotifyCreated(model: T | any, newModelObj)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_create.ts:79\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newModelObj\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(model: T | any, objToCreate?: T | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_create.ts:26\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Create a new object in the database using a front end defined object; will need to wait for the post resolution to get the DB generated UUID assigned to the front end key\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The interface / class to construct the query against and build response objects from\n\n                                                        \n                                                \n                                                \n                                                        objToCreate\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                The front end object to be created\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createObs\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateObs(model: T | any, objToCreate?: T | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_create.ts:46\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        objToCreate\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            createPromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createPromise(model: T | any, objToCreate: T | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_create.ts:60\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        objToCreate\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDataService\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDataService(ds: DataService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_create.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ds\n                                                        \n                                                                    DataService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            DS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DS:     DataService\n\n                    \n                \n                    \n                        \n                            Type :     DataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/crud-service/_create.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { DataService } from './data.service';\nimport { handleHttpError } from './utilities';\n\n@Injectable()\nexport class DataCreate {\n    private DS: DataService\n\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    setDataService(ds: DataService) {\n        this.DS = ds;\n    }\n\n    /**\n     * Create a new object in the database using a front end defined object; will need to wait for the post resolution to get the DB generated UUID assigned to the front end key\n     * @param model The interface / class to construct the query against and build response objects from\n     * @param objToCreate The front end object to be created\n     */\n    create(model: T | any, objToCreate?: T | any) {\n        this.DS.loadingMap[model.tableName] = true;\n\n        const newModelObj = new model(objToCreate);\n\n        const url = `${this.DS.endpoint}${model.tableName}`;\n        this.http.post(url, newModelObj, this.DS.httpOptions)\n            .subscribe(\n                (res: any) => {\n                    newModelObj.key = res.key || res.ObjectId || res.id || '';\n                    this.cacheAndNotifyCreated(model, newModelObj);\n                    this.DS.loadingMap[model.tableName] = false;\n                },\n                err => {\n                    handleHttpError(err);\n                    this.DS.loadingMap[model.tableName] = false;\n                }\n            );\n    }\n\n    createObs(model: T | any, objToCreate?: T | any): Observable {\n        const newModelObj = new model(objToCreate);\n\n        const url = `${this.DS.endpoint}${model.tableName}`;\n        return this.http.post(url, newModelObj, this.DS.httpOptions)\n            .pipe(\n                catchError(handleHttpError),\n                tap((res: T[] | any) => {\n                    newModelObj.key = res.key || res.ObjectId || res.id || '';\n                    this.cacheAndNotifyCreated(model, newModelObj);\n                })\n            );\n    }\n\n    async createPromise(model: T | any, objToCreate: T | any): Promise {\n        const newModelObj = new model(objToCreate);\n\n        const url = `${this.DS.endpoint}${model.tableName}`;\n        try {\n            const res = await fetch(url, {\n                method: 'post',\n                body: JSON.stringify(objToCreate)\n            });\n            const resJson = await res.json();\n            newModelObj.key = resJson.key || resJson.ObjectId || resJson.id || '';\n            this.cacheAndNotifyCreated(model, newModelObj);\n            return resJson;\n        }\n        catch (err) {\n            handleHttpError(err);\n        }\n    }\n\n    private cacheAndNotifyCreated(model: T | any, newModelObj) {\n        // Append the new object into the front end cache\n        this.DS.cache[model.tableName].push(Object.assign({}, newModelObj));\n\n        this.DS.subjectMap[model.tableName].many.next(this.DS.cache[model.tableName]);\n        this.DS.subjectMap[model.tableName].one.next(newModelObj);\n    }\n\n    // TODO: \n    // CREATEBULK\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataDelete.html":{"url":"injectables/DataDelete.html","title":"injectable - DataDelete","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataDelete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/crud-service/_delete.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                DS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cacheAndNotifyDelete\n                            \n                            \n                                delete\n                            \n                            \n                                deleteObs\n                            \n                            \n                                    Async\n                                deletePromise\n                            \n                            \n                                setDataService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/crud-service/_delete.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheAndNotifyDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cacheAndNotifyDelete(model: T | any, objToDelete: T | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_delete.ts:92\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        objToDelete\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(model: T | any, objToDelete: T | any, stopNotify?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_delete.ts:27\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Delete a front end object fron the database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The interface / class to construct the query against and build response objects from\n\n                                                        \n                                                \n                                                \n                                                        objToDelete\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The front end object to be deleted in the DB\n\n                                                        \n                                                \n                                                \n                                                        stopNotify\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteObs\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteObs(model: T | any, objToDelete: T | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_delete.ts:51\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        objToDelete\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            deletePromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deletePromise(model: T | any, objToDelete: T | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_delete.ts:69\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        objToDelete\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDataService\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDataService(ds: DataService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_delete.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ds\n                                                        \n                                                                    DataService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            DS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DS:     DataService\n\n                    \n                \n                    \n                        \n                            Type :     DataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/crud-service/_delete.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { DataService } from './data.service';\nimport { handleHttpError } from './utilities';\n\n@Injectable()\nexport class DataDelete {\n    private DS: DataService\n\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    setDataService(ds: DataService) {\n        this.DS = ds;\n    }\n\n    /**\n     * Delete a front end object fron the database\n     * @param model The interface / class to construct the query against and build response objects from\n     * @param objToDelete The front end object to be deleted in the DB\n     * @param notifyOne Determine if we should just notify with an object update...\n     */\n    delete(model: T | any, objToDelete: T | any, stopNotify?: boolean) {\n        this.DS.loadingMap[model.tableName] = true;\n\n        // Optimistic Update Frontend\n        if (this.DS.isOptimistic && !stopNotify) {\n            this.cacheAndNotifyDelete(model, objToDelete);\n        }\n\n        const url = `${this.DS.endpoint}${model.tableName}/${objToDelete.key || objToDelete.id}`;\n        this.http.delete(url, this.DS.httpOptions)\n            .subscribe(\n                res => {\n                    if (!this.DS.isOptimistic && !stopNotify) { // wait for the server response before modifying the front end\n                        this.cacheAndNotifyDelete(model, objToDelete);\n                    }\n                    this.DS.loadingMap[model.tableName] = false;\n                },\n                err => {\n                    handleHttpError(err);\n                    this.DS.loadingMap[model.tableName] = false;\n                }\n            );\n    }\n\n    deleteObs(model: T | any, objToDelete: T | any): Observable {\n        if (this.DS.isOptimistic) {\n            // Optimistically Remove the object to delete from the front end cache by filtering out everything that doesn't have the same key\n            this.DS.cache[model.tableName] = this.DS.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n        }\n\n        const url = `${this.DS.endpoint}${model.tableName}/${objToDelete.key || objToDelete.id}`;\n        return this.http.delete(url, this.DS.httpOptions)\n            .pipe(\n                catchError(handleHttpError),\n                tap((res: T[]) => {\n                    if (!this.DS.isOptimistic) { // wait for the server response before modifying the front end\n                        this.DS.cache[model.tableName] = this.DS.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n                    }\n                })\n            );\n    }\n\n    async deletePromise(model: T | any, objToDelete: T | any): Promise {\n        if (this.DS.isOptimistic) {\n            // Optimistically Remove the object to delete from the front end cache by filtering out everything that doesn't have the same key\n            this.DS.cache[model.tableName] = this.DS.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n        }\n\n        const url = `${this.DS.endpoint}${model.tableName}/${objToDelete.key || objToDelete.id}`;\n        try {\n            const res = await fetch(url, {\n                method: 'delete',\n                body: JSON.stringify(objToDelete)\n            });\n            const resJson = await res.json();\n            if (!this.DS.isOptimistic) { // wait for the server response before modifying the front end\n                this.DS.cache[model.tableName] = this.DS.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n            }\n            return resJson;\n        }\n        catch (err) {\n            handleHttpError(err);\n        }\n    }\n\n    private cacheAndNotifyDelete(model: T | any, objToDelete: T | any) {\n        // Remove the object to delete from the front end cache by filtering out everything that doesn't have the same key\n        this.DS.cache[model.tableName] = this.DS.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n\n        this.DS.subjectMap[model.tableName].many.next(this.DS.cache[model.tableName]);\n        this.DS.subjectMap[model.tableName].one.next(objToDelete);\n    }\n\n    // TODO: \n    // DELETEBULK\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataRead.html":{"url":"injectables/DataRead.html","title":"injectable - DataRead","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataRead\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/crud-service/_read.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                DS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cacheAndNotifyRead\n                            \n                            \n                                    Private\n                                createSearchParams\n                            \n                            \n                                read\n                            \n                            \n                                readObs\n                            \n                            \n                                    Async\n                                readPromise\n                            \n                            \n                                setDataService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/crud-service/_read.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheAndNotifyRead\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cacheAndNotifyRead(model: T | any, res: T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_read.ts:108\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        res\n                                                        \n                                                                    T[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createSearchParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createSearchParams(query: HttpParams | String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_read.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                        \n                                                                    HttpParams | String\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpParams\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read\n                            \n                            \n                        \n                    \n                \n                \n                    \nread(model: T | any, query?: HttpParams | String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_read.ts:26\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Using a model interface's table definition, do a HTTP get\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The interface / class to construct the query against and build response objects from\n\n                                                        \n                                                \n                                                \n                                                        query\n                                                        \n                                                                    HttpParams | String\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                A limiting query to apply to the get. Expects an object of type URLSearchParams to append to the read, or a simple string\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readObs\n                            \n                            \n                        \n                    \n                \n                \n                    \nreadObs(model: T | any, query?: HttpParams | String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_read.ts:49\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        query\n                                                        \n                                                                    HttpParams | String\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            readPromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        readPromise(model: T | any, query?: HttpParams | String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_read.ts:68\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        query\n                                                        \n                                                                    HttpParams | String\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDataService\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDataService(ds: DataService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_read.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ds\n                                                        \n                                                                    DataService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            DS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DS:     DataService\n\n                    \n                \n                    \n                        \n                            Type :     DataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/crud-service/_read.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { DataService } from './data.service';\nimport { handleHttpError } from './utilities';\n\n@Injectable()\nexport class DataRead {\n    private DS: DataService\n\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    setDataService(ds: DataService) {\n        this.DS = ds;\n    }\n\n    /**\n     * Using a model interface's table definition, do a HTTP get\n     * @param model The interface / class to construct the query against and build response objects from\n     * @param query A limiting query to apply to the get. Expects an object of type URLSearchParams to append to the read, or a simple string\n     */\n    read(model: T | any, query?: HttpParams | String) {\n        this.DS.loadingMap[model.tableName] = true;\n\n        const httpOpts = Object.assign({}, this.DS.httpOptions);\n\n        if (query) {\n            httpOpts.params = this.createSearchParams(query);\n        }\n\n        const url = `${this.DS.endpoint}${model.tableName}`;\n        this.http.get(url, httpOpts)\n            .subscribe(\n                res => {\n                    this.cacheAndNotifyRead(model, res);\n                    this.DS.loadingMap[model.tableName] = false;\n                },\n                err => {\n                    handleHttpError(err);\n                    this.DS.loadingMap[model.tableName] = false;\n                }\n            );\n    }\n\n    readObs(model: T | any, query?: HttpParams | String): Observable {\n        this.DS.loadingMap[model.tableName] = true;\n\n        const httpOpts = Object.assign({}, this.DS.httpOptions);\n\n        if (query) {\n            httpOpts.params = this.createSearchParams(query);\n        }\n\n        const url = `${this.DS.endpoint}${model.tableName}`;\n        return this.http.get(url, httpOpts)\n            .pipe(\n                catchError(handleHttpError),\n                tap((res: T[]) => {\n                    this.cacheAndNotifyRead(model, res);\n                })\n            );\n    }\n\n    async readPromise(model: T | any, query?: HttpParams | String): Promise {\n        this.DS.loadingMap[model.tableName] = true;\n\n        const httpOpts = Object.assign({}, this.DS.httpOptions);\n\n        if (query) {\n            httpOpts.params = this.createSearchParams(query);\n        }\n\n        const url = `${this.DS.endpoint}${model.tableName}`; // TODO: Spread query params for the fetch\n        // TODO: Attach Headers to Fetch\n        try {\n            const res = await fetch(url);\n            const resJson = await res.json();\n            this.cacheAndNotifyRead(model, resJson);\n            return resJson;\n        }\n        catch (err) {\n            handleHttpError(err);\n        }\n    }\n\n    private createSearchParams(query: HttpParams | String): HttpParams {\n        let newParams = new HttpParams;\n\n        if (query instanceof String) {\n            const searchParams = new HttpParams();\n            const splitQuery = query.split('&');\n            splitQuery.forEach(param => {\n                const keyValPair = param.split('=');\n                searchParams.set(keyValPair[0], keyValPair[1]);\n            });\n            newParams = searchParams;\n        } else {\n            newParams = query;\n        }\n\n        return newParams;\n    }\n\n    private cacheAndNotifyRead(model: T | any, res: T[]) {\n        this.DS.cache[model.tableName] = [];\n        res.forEach((el: T) => {\n            this.DS.cache[model.tableName].push(new model(el));\n        });\n        // Update Frontend\n        this.DS.subjectMap[model.tableName].many.next(this.DS.cache[model.tableName]);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataUpdate.html":{"url":"injectables/DataUpdate.html","title":"injectable - DataUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/crud-service/_update.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                DS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cacheAndNotifyUpdated\n                            \n                            \n                                setDataService\n                            \n                            \n                                update\n                            \n                            \n                                updateObs\n                            \n                            \n                                    Async\n                                updatePromise\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/crud-service/_update.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheAndNotifyUpdated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cacheAndNotifyUpdated(model: T | any, objToUpdate: T | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_update.ts:75\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        objToUpdate\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDataService\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDataService(ds: DataService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_update.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ds\n                                                        \n                                                                    DataService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(model: T | any, objToUpdate: T | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_update.ts:26\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Update a front end object's values into the database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The interface / class to construct the query against and build response objects from\n\n                                                        \n                                                \n                                                \n                                                        objToUpdate\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The front end object to be updated in the DB\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateObs\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateObs(model: T | any, objToUpdate: T | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_update.ts:48\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        objToUpdate\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            updatePromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updatePromise(model: T | any, objToUpdate: T | any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/crud-service/_update.ts:59\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        objToUpdate\n                                                        \n                                                                    T | any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            DS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DS:     DataService\n\n                    \n                \n                    \n                        \n                            Type :     DataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/crud-service/_update.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { DataService } from './data.service';\nimport { handleHttpError } from './utilities';\n\n@Injectable()\nexport class DataUpdate {\n    private DS: DataService\n\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    setDataService(ds: DataService) {\n        this.DS = ds;\n    }\n\n    /**\n     * Update a front end object's values into the database\n     * @param model The interface / class to construct the query against and build response objects from\n     * @param objToUpdate The front end object to be updated in the DB\n     */\n    update(model: T | any, objToUpdate: T | any) {\n        this.DS.loadingMap[model.tableName] = true;\n\n        if (this.DS.isOptimistic) {\n            this.cacheAndNotifyUpdated(model, objToUpdate);\n        }\n\n        const url = `${this.DS.endpoint}${model.tableName}/${objToUpdate.key}`;\n        this.http.patch(url, objToUpdate, this.DS.httpOptions).subscribe(\n            res => {\n                if (!this.DS.isOptimistic) {\n                    this.cacheAndNotifyUpdated(model, objToUpdate);\n                }\n                this.DS.loadingMap[model.tableName] = false;\n            },\n            err => {\n                handleHttpError(err);\n                this.DS.loadingMap[model.tableName] = false;\n            }\n        );\n    }\n\n    updateObs(model: T | any, objToUpdate: T | any): Observable {\n        const url = `${this.DS.endpoint}${model.tableName}/${objToUpdate.key}`;\n        return this.http.patch(url, objToUpdate, this.DS.httpOptions)\n            .pipe(\n                catchError(handleHttpError),\n                tap((res: T[]) => {\n                    this.cacheAndNotifyUpdated(model, objToUpdate);\n                })\n            );\n    }\n\n    async updatePromise(model: T | any, objToUpdate: T | any): Promise {\n        const url = `${this.DS.endpoint}${model.tableName}/${objToUpdate.key}`;\n        try {\n            const res = await fetch(url, {\n                method: 'patch',\n                body: JSON.stringify(objToUpdate)\n            });\n            const resJson = await res.json();\n            this.cacheAndNotifyUpdated(model, objToUpdate);\n            return resJson;\n        }\n        catch (err) {\n            handleHttpError(err);\n        }\n    }\n\n    private cacheAndNotifyUpdated(model: T | any, objToUpdate: T | any) {\n        // Find the front end object to update in the cache\n        const localObjToUpdate: T | any = this.DS.cache[model.tableName].find(el => el.key === objToUpdate.key);\n        if (!localObjToUpdate) {\n            return;\n        }\n        let copyObjToUpdate = Object.assign({}, localObjToUpdate);\n        copyObjToUpdate = Object.assign(copyObjToUpdate, objToUpdate);\n\n        // Copy the new object into the local object reference using Object.assign\n        Object.assign(localObjToUpdate, objToUpdate);\n\n        // Optimistic Update Frontend\n        this.DS.subjectMap[model.tableName].many.next(this.DS.cache[model.tableName]);\n        this.DS.subjectMap[model.tableName].one.next(localObjToUpdate);\n    }\n\n    // TODO: \n    // UPDATEBULK\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICompany.html":{"url":"interfaces/ICompany.html","title":"interface - ICompany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICompany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Company.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IDataBaseObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dateCreated\n                                \n                                \n                                            Optional\n                                        location\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateCreated\n                                    \n                                \n                                \n                                    \n                                        dateCreated:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableMap } from './../shared/table-map';\nimport { IDataBaseObj } from './_base';\n\nexport interface ICompany extends IDataBaseObj {\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n}\n\nexport class Company implements ICompany {\n    static tableName: string = TableMap.Companies;\n\n    id: string;\n\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n\n    constructor(props: ICompany) {\n        Object.keys(props).forEach(prop => {\n            const value = props[prop];\n            this[prop] = value;\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataBaseObj.html":{"url":"interfaces/IDataBaseObj.html","title":"interface - IDataBaseObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDataBaseObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/_base.ts\n        \n\n            \n                Description\n            \n            \n                Interface that describes fields that will be expected to be available on any database table, including metadata\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        tableName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableName\n                                    \n                                \n                                \n                                    \n                                        tableName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the table or collection that data is stored in\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IDataBaseObj {\n    /**\n     * The name of the table or collection that data is stored in\n     */\n    tableName?: string;\n    \n    id: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProduct.html":{"url":"interfaces/IProduct.html","title":"interface - IProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Product.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IDataBaseObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        age\n                                \n                                \n                                            Optional\n                                        companyKey\n                                \n                                \n                                            Optional\n                                        dateCreated\n                                \n                                \n                                            Optional\n                                        dateObtained\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        origin\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        companyKey\n                                    \n                                \n                                \n                                    \n                                        companyKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateCreated\n                                    \n                                \n                                \n                                    \n                                        dateCreated:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateObtained\n                                    \n                                \n                                \n                                    \n                                        dateObtained:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDataBaseObj } from './_base';\nimport { TableMap } from '../shared/table-map';\n\nexport interface IProduct extends IDataBaseObj {\n    name?: string;\n    type?: string;\n    origin?: string;\n    age?: number;\n    dateCreated?: Date;\n    dateObtained?: Date;\n\n    companyKey?: string;\n}\n\nexport class Product implements IProduct {\n    static tableName: string = TableMap.Products;\n\n    id: string;\n\n    name: string;\n    type: string;\n    origin: string;\n    age: number;\n    dateCreated: Date;\n    dateObtained: Date;\n\n    companyKey: string;\n\n    constructor(props: IProduct) {\n        Object.keys(props).forEach(prop => {\n            const value = props[prop];\n            this[prop] = value;\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISeller.html":{"url":"interfaces/ISeller.html","title":"interface - ISeller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISeller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Seller.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IDataBaseObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dateCreated\n                                \n                                \n                                            Optional\n                                        location\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateCreated\n                                    \n                                \n                                \n                                    \n                                        dateCreated:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableMap } from './../shared/table-map';\nimport { IDataBaseObj } from './_base';\n\nexport interface ISeller extends IDataBaseObj {\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n}\n\nexport class Seller implements ISeller {\n    static tableName: string = TableMap.Sellers;\n\n    id: string;\n\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n\n    constructor(props: ISeller) {\n        Object.keys(props).forEach(prop => {\n            const value = props[prop];\n            this[prop] = value;\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoadingMap.html":{"url":"interfaces/LoadingMap.html","title":"interface - LoadingMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoadingMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/crud-service/data.service.ts\n        \n\n            \n                Description\n            \n            \n                A mapping of every DB table to a load boolean so that external components can wait for a table's data to be loaded\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [tableName: string]:    boolean\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/crud-service/data.service.ts:136\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\nimport { TableMap } from '../table-map';\nimport { DataCreate } from './_create';\nimport { DataDelete } from './_delete';\nimport { DataRead } from './_read';\nimport { DataUpdate } from './_update';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  endpoint: string = environment.serverUrl;\n\n  // Define header options to be applied to all requests\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // 'Authorization': 'my-auth-token'\n    }),\n    params: new HttpParams()\n  };\n\n  // Determine whether or not to be optimstic with our Http calls in terms of updating the front end. True means update the front end right away despite what the server does.\n  isOptimistic = true;\n\n  // A simple object that is used a cache for any data that has been loaded into the system\n  cache: any = {};\n  // A map of TableName => Subject for external components to subscribe to, in order to be notified of updates to that table's data\n  subjectMap: SubjectMap = {};\n  // A map of TableName => Boolean to components to use for displaying a loading icon when that table's data is being loaded or modified\n  loadingMap: LoadingMap = {};\n\n  constructor(\n    private http: HttpClient,\n    private DC: DataCreate,\n    private DR: DataRead,\n    private DU: DataUpdate,\n    private DD: DataDelete\n  ) {\n    this.DC.setDataService(this);\n    this.DR.setDataService(this);\n    this.DU.setDataService(this);\n    this.DD.setDataService(this);\n\n    this.setupLocalProps();\n  }\n\n  private setupLocalProps() {\n    // TODO: Figure out how to make a subject with the correct TS model based on the table name\n    Object.keys(TableMap).forEach(tableName => {\n      this.loadingMap[TableMap[tableName]] = false;\n      this.cache[TableMap[tableName]] = [];\n      this.subjectMap[TableMap[tableName]] = {\n        many: new Subject(),\n        one: new Subject()\n      };\n    });\n  }\n\n  /**\n   * PUBLIC API\n   */\n\n  // CREATE\n  create(model: T | any, objToCreate?: T | any) {\n    this.DC.create(model, objToCreate);\n  }\n\n  createObs(model: T | any, objToCreate?: T | any): Observable {\n    return this.DC.createObs(model, objToCreate);\n  }\n\n  createPromise(model: T | any, objToCreate: T | any): Promise {\n    return this.DC.createPromise(model, objToCreate);\n  }\n\n  // READ\n  read(model: T | any, query?: HttpParams | String) {\n    this.DR.read(model, query);\n  }\n\n  readObs(model: T | any, query?: HttpParams | String): Observable {\n    return this.DR.readObs(model, query);\n  }\n\n  readPromise(model: T | any, query?: HttpParams | String): Promise {\n    return this.DR.readPromise(model, query);\n  }\n\n  // UPDATE\n  update(model: T | any, objToUpdate: T | any) {\n    this.DU.update(model, objToUpdate);\n  }\n\n  updateObs(model: T | any, objToUpdate: T | any): Observable {\n    return this.DU.updateObs(model, objToUpdate);\n  }\n\n  updatePromise(model: T | any, objToUpdate: T | any): Promise {\n    return this.DU.updatePromise(model, objToUpdate);\n  }\n\n  // DELETE\n  delete(model: T | any, objToDelete: T | any, stopNotify?: boolean) {\n    this.DD.delete(model, objToDelete, stopNotify);\n  }\n  \n  deleteObs(model: T | any, objToDelete: T | any): Observable {\n    return this.DD.deleteObs(model, objToDelete);\n  }\n  \n  deletePromise(model: T | any, objToDelete: T | any): Promise {\n    return this.DD.deletePromise(model, objToDelete);\n  }\n}\n\n/**\n * A mapping of every environment defined DB table to a subject so that CRUD applications can send notifications to all subject subscribers\n * Components can subscribe to the \"many\" subject to receive an array of new objects, or to the \"one\" subject to get a single object\n * TODO: Investigate and Spread this into an individual CRUD subject for each table\n */\ninterface SubjectMap {\n  [tableName: string]: {\n    many: Subject;\n    one: Subject;\n  };\n}\n\n/**\n * A mapping of every DB table to a load boolean so that external components can wait for a table's data to be loaded\n */\ninterface LoadingMap {\n  [tableName: string]: boolean;\n}\n\n/**\n * A simple cache which is an object whose properties is a table name with an array of that table's data loaded into the front end\n */\ninterface Cache {\n  [tableName: string]: any[];\n}\n\n/**\n * An interface for what we expect to be used for dynamic Table CRUD\n */\ninterface TableCRUD {\n  cache: Cache;\n  subjectMap: SubjectMap;\n  loadingMap: LoadingMap;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatIconRegistry,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSnackBarRef,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n} from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatFormFieldModule\n    ],\n    exports: [\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatFormFieldModule\n    ],\n    providers: [\n        MatIconRegistry,\n        // MatSnackBarRef\n    ]\n})\nexport class MaterialModule {\n    constructor(public matIconRegistry: MatIconRegistry) {\n        matIconRegistry.registerFontClassAlias('fontawesome', 'fa');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Product.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IProduct\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                companyKey\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateObtained\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                origin\n                            \n                            \n                                    Static\n                                tableName\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IProduct)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/Product.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    IProduct\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        age:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Product.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        companyKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Product.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCreated:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Product.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateObtained\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateObtained:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Product.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Product.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Product.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            origin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        origin:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Product.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : TableMap.Products\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Product.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Product.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IDataBaseObj } from './_base';\nimport { TableMap } from '../shared/table-map';\n\nexport interface IProduct extends IDataBaseObj {\n    name?: string;\n    type?: string;\n    origin?: string;\n    age?: number;\n    dateCreated?: Date;\n    dateObtained?: Date;\n\n    companyKey?: string;\n}\n\nexport class Product implements IProduct {\n    static tableName: string = TableMap.Products;\n\n    id: string;\n\n    name: string;\n    type: string;\n    origin: string;\n    age: number;\n    dateCreated: Date;\n    dateObtained: Date;\n\n    companyKey: string;\n\n    constructor(props: IProduct) {\n        Object.keys(props).forEach(prop => {\n            const value = props[prop];\n            this[prop] = value;\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Seller.html":{"url":"classes/Seller.html","title":"class - Seller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Seller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Seller.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ISeller\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dateCreated\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                location\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Static\n                                tableName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ISeller)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/Seller.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    ISeller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dateCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCreated:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Seller.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Seller.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            location\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        location:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Seller.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Seller.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : TableMap.Sellers\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Seller.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TableMap } from './../shared/table-map';\nimport { IDataBaseObj } from './_base';\n\nexport interface ISeller extends IDataBaseObj {\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n}\n\nexport class Seller implements ISeller {\n    static tableName: string = TableMap.Sellers;\n\n    id: string;\n\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n\n    constructor(props: ISeller) {\n        Object.keys(props).forEach(prop => {\n            const value = props[prop];\n            this[prop] = value;\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubjectMap.html":{"url":"interfaces/SubjectMap.html","title":"interface - SubjectMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SubjectMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/crud-service/data.service.ts\n        \n\n            \n                Description\n            \n            \n                A mapping of every environment defined DB table to a subject so that CRUD applications can send notifications to all subject subscribers\nComponents can subscribe to the \"many\" subject to receive an array of new objects, or to the \"one\" subject to get a single object\nTODO: Investigate and Spread this into an individual CRUD subject for each table\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [tableName: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/crud-service/data.service.ts:126\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\nimport { TableMap } from '../table-map';\nimport { DataCreate } from './_create';\nimport { DataDelete } from './_delete';\nimport { DataRead } from './_read';\nimport { DataUpdate } from './_update';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  endpoint: string = environment.serverUrl;\n\n  // Define header options to be applied to all requests\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // 'Authorization': 'my-auth-token'\n    }),\n    params: new HttpParams()\n  };\n\n  // Determine whether or not to be optimstic with our Http calls in terms of updating the front end. True means update the front end right away despite what the server does.\n  isOptimistic = true;\n\n  // A simple object that is used a cache for any data that has been loaded into the system\n  cache: any = {};\n  // A map of TableName => Subject for external components to subscribe to, in order to be notified of updates to that table's data\n  subjectMap: SubjectMap = {};\n  // A map of TableName => Boolean to components to use for displaying a loading icon when that table's data is being loaded or modified\n  loadingMap: LoadingMap = {};\n\n  constructor(\n    private http: HttpClient,\n    private DC: DataCreate,\n    private DR: DataRead,\n    private DU: DataUpdate,\n    private DD: DataDelete\n  ) {\n    this.DC.setDataService(this);\n    this.DR.setDataService(this);\n    this.DU.setDataService(this);\n    this.DD.setDataService(this);\n\n    this.setupLocalProps();\n  }\n\n  private setupLocalProps() {\n    // TODO: Figure out how to make a subject with the correct TS model based on the table name\n    Object.keys(TableMap).forEach(tableName => {\n      this.loadingMap[TableMap[tableName]] = false;\n      this.cache[TableMap[tableName]] = [];\n      this.subjectMap[TableMap[tableName]] = {\n        many: new Subject(),\n        one: new Subject()\n      };\n    });\n  }\n\n  /**\n   * PUBLIC API\n   */\n\n  // CREATE\n  create(model: T | any, objToCreate?: T | any) {\n    this.DC.create(model, objToCreate);\n  }\n\n  createObs(model: T | any, objToCreate?: T | any): Observable {\n    return this.DC.createObs(model, objToCreate);\n  }\n\n  createPromise(model: T | any, objToCreate: T | any): Promise {\n    return this.DC.createPromise(model, objToCreate);\n  }\n\n  // READ\n  read(model: T | any, query?: HttpParams | String) {\n    this.DR.read(model, query);\n  }\n\n  readObs(model: T | any, query?: HttpParams | String): Observable {\n    return this.DR.readObs(model, query);\n  }\n\n  readPromise(model: T | any, query?: HttpParams | String): Promise {\n    return this.DR.readPromise(model, query);\n  }\n\n  // UPDATE\n  update(model: T | any, objToUpdate: T | any) {\n    this.DU.update(model, objToUpdate);\n  }\n\n  updateObs(model: T | any, objToUpdate: T | any): Observable {\n    return this.DU.updateObs(model, objToUpdate);\n  }\n\n  updatePromise(model: T | any, objToUpdate: T | any): Promise {\n    return this.DU.updatePromise(model, objToUpdate);\n  }\n\n  // DELETE\n  delete(model: T | any, objToDelete: T | any, stopNotify?: boolean) {\n    this.DD.delete(model, objToDelete, stopNotify);\n  }\n  \n  deleteObs(model: T | any, objToDelete: T | any): Observable {\n    return this.DD.deleteObs(model, objToDelete);\n  }\n  \n  deletePromise(model: T | any, objToDelete: T | any): Promise {\n    return this.DD.deletePromise(model, objToDelete);\n  }\n}\n\n/**\n * A mapping of every environment defined DB table to a subject so that CRUD applications can send notifications to all subject subscribers\n * Components can subscribe to the \"many\" subject to receive an array of new objects, or to the \"one\" subject to get a single object\n * TODO: Investigate and Spread this into an individual CRUD subject for each table\n */\ninterface SubjectMap {\n  [tableName: string]: {\n    many: Subject;\n    one: Subject;\n  };\n}\n\n/**\n * A mapping of every DB table to a load boolean so that external components can wait for a table's data to be loaded\n */\ninterface LoadingMap {\n  [tableName: string]: boolean;\n}\n\n/**\n * A simple cache which is an object whose properties is a table name with an array of that table's data loaded into the front end\n */\ninterface Cache {\n  [tableName: string]: any[];\n}\n\n/**\n * An interface for what we expect to be used for dynamic Table CRUD\n */\ninterface TableCRUD {\n  cache: Cache;\n  subjectMap: SubjectMap;\n  loadingMap: LoadingMap;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableCRUD.html":{"url":"interfaces/TableCRUD.html","title":"interface - TableCRUD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TableCRUD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/crud-service/data.service.ts\n        \n\n            \n                Description\n            \n            \n                An interface for what we expect to be used for dynamic Table CRUD\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cache\n                                \n                                \n                                        loadingMap\n                                \n                                \n                                        subjectMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                    \n                                \n                                \n                                    \n                                        cache:     Cache\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Cache\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadingMap\n                                    \n                                \n                                \n                                    \n                                        loadingMap:     LoadingMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoadingMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subjectMap\n                                    \n                                \n                                \n                                    \n                                        subjectMap:     SubjectMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SubjectMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\nimport { TableMap } from '../table-map';\nimport { DataCreate } from './_create';\nimport { DataDelete } from './_delete';\nimport { DataRead } from './_read';\nimport { DataUpdate } from './_update';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  endpoint: string = environment.serverUrl;\n\n  // Define header options to be applied to all requests\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // 'Authorization': 'my-auth-token'\n    }),\n    params: new HttpParams()\n  };\n\n  // Determine whether or not to be optimstic with our Http calls in terms of updating the front end. True means update the front end right away despite what the server does.\n  isOptimistic = true;\n\n  // A simple object that is used a cache for any data that has been loaded into the system\n  cache: any = {};\n  // A map of TableName => Subject for external components to subscribe to, in order to be notified of updates to that table's data\n  subjectMap: SubjectMap = {};\n  // A map of TableName => Boolean to components to use for displaying a loading icon when that table's data is being loaded or modified\n  loadingMap: LoadingMap = {};\n\n  constructor(\n    private http: HttpClient,\n    private DC: DataCreate,\n    private DR: DataRead,\n    private DU: DataUpdate,\n    private DD: DataDelete\n  ) {\n    this.DC.setDataService(this);\n    this.DR.setDataService(this);\n    this.DU.setDataService(this);\n    this.DD.setDataService(this);\n\n    this.setupLocalProps();\n  }\n\n  private setupLocalProps() {\n    // TODO: Figure out how to make a subject with the correct TS model based on the table name\n    Object.keys(TableMap).forEach(tableName => {\n      this.loadingMap[TableMap[tableName]] = false;\n      this.cache[TableMap[tableName]] = [];\n      this.subjectMap[TableMap[tableName]] = {\n        many: new Subject(),\n        one: new Subject()\n      };\n    });\n  }\n\n  /**\n   * PUBLIC API\n   */\n\n  // CREATE\n  create(model: T | any, objToCreate?: T | any) {\n    this.DC.create(model, objToCreate);\n  }\n\n  createObs(model: T | any, objToCreate?: T | any): Observable {\n    return this.DC.createObs(model, objToCreate);\n  }\n\n  createPromise(model: T | any, objToCreate: T | any): Promise {\n    return this.DC.createPromise(model, objToCreate);\n  }\n\n  // READ\n  read(model: T | any, query?: HttpParams | String) {\n    this.DR.read(model, query);\n  }\n\n  readObs(model: T | any, query?: HttpParams | String): Observable {\n    return this.DR.readObs(model, query);\n  }\n\n  readPromise(model: T | any, query?: HttpParams | String): Promise {\n    return this.DR.readPromise(model, query);\n  }\n\n  // UPDATE\n  update(model: T | any, objToUpdate: T | any) {\n    this.DU.update(model, objToUpdate);\n  }\n\n  updateObs(model: T | any, objToUpdate: T | any): Observable {\n    return this.DU.updateObs(model, objToUpdate);\n  }\n\n  updatePromise(model: T | any, objToUpdate: T | any): Promise {\n    return this.DU.updatePromise(model, objToUpdate);\n  }\n\n  // DELETE\n  delete(model: T | any, objToDelete: T | any, stopNotify?: boolean) {\n    this.DD.delete(model, objToDelete, stopNotify);\n  }\n  \n  deleteObs(model: T | any, objToDelete: T | any): Observable {\n    return this.DD.deleteObs(model, objToDelete);\n  }\n  \n  deletePromise(model: T | any, objToDelete: T | any): Promise {\n    return this.DD.deletePromise(model, objToDelete);\n  }\n}\n\n/**\n * A mapping of every environment defined DB table to a subject so that CRUD applications can send notifications to all subject subscribers\n * Components can subscribe to the \"many\" subject to receive an array of new objects, or to the \"one\" subject to get a single object\n * TODO: Investigate and Spread this into an individual CRUD subject for each table\n */\ninterface SubjectMap {\n  [tableName: string]: {\n    many: Subject;\n    one: Subject;\n  };\n}\n\n/**\n * A mapping of every DB table to a load boolean so that external components can wait for a table's data to be loaded\n */\ninterface LoadingMap {\n  [tableName: string]: boolean;\n}\n\n/**\n * A simple cache which is an object whose properties is a table name with an array of that table's data loaded into the front end\n */\ninterface Cache {\n  [tableName: string]: any[];\n}\n\n/**\n * An interface for what we expect to be used for dynamic Table CRUD\n */\ninterface TableCRUD {\n  cache: Cache;\n  subjectMap: SubjectMap;\n  loadingMap: LoadingMap;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableMap.html":{"url":"classes/TableMap.html","title":"class - TableMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/table-map.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Companies\n                            \n                            \n                                    Static\n                                Products\n                            \n                            \n                                    Static\n                                Sellers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            Companies\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Companies:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Companies'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/table-map.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            Products\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Products:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Products'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/table-map.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            Sellers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Sellers:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Sellers'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/table-map.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TableMap {\n    static Products = 'Products';\n    static Companies = 'Companies';\n    static Sellers = 'Sellers';\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/app/models/Company.ts\n            \n            \n                class\n            \n            \n                Company\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/Company.ts\n            \n            \n                interface\n            \n            \n                ICompany\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/Product.ts\n            \n            \n                class\n            \n            \n                Product\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/Product.ts\n            \n            \n                interface\n            \n            \n                IProduct\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/Seller.ts\n            \n            \n                class\n            \n            \n                Seller\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/Seller.ts\n            \n            \n                interface\n            \n            \n                ISeller\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/_base.ts\n            \n            \n                interface\n            \n            \n                IDataBaseObj\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/crud-service/_create.ts\n            \n            \n                injectable\n            \n            \n                DataCreate\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/shared/crud-service/_delete.ts\n            \n            \n                injectable\n            \n            \n                DataDelete\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/shared/crud-service/_read.ts\n            \n            \n                injectable\n            \n            \n                DataRead\n            \n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/shared/crud-service/_update.ts\n            \n            \n                injectable\n            \n            \n                DataUpdate\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/shared/crud-service/data.service.ts\n            \n            \n                injectable\n            \n            \n                DataService\n            \n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/app/shared/crud-service/data.service.ts\n            \n            \n                interface\n            \n            \n                Cache\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/crud-service/data.service.ts\n            \n            \n                interface\n            \n            \n                LoadingMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/crud-service/data.service.ts\n            \n            \n                interface\n            \n            \n                SubjectMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/crud-service/data.service.ts\n            \n            \n                interface\n            \n            \n                TableCRUD\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/crud-service/utilities.ts\n            \n            \n                function\n            \n            \n                handleHttpError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/table-map.ts\n            \n            \n                class\n            \n            \n                TableMap\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.4\n        \n            @angular/cdk : ^7.1.0\n        \n            @angular/common : ~7.0.0\n        \n            @angular/compiler : ~7.0.0\n        \n            @angular/core : ~7.0.0\n        \n            @angular/forms : ~7.0.0\n        \n            @angular/http : ~7.0.0\n        \n            @angular/material : ^7.1.0\n        \n            @angular/platform-browser : ~7.0.0\n        \n            @angular/platform-browser-dynamic : ~7.0.0\n        \n            @angular/router : ~7.0.0\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            faker : ^4.1.0\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ~6.3.3\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            handleHttpError   (src/.../utilities.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/crud-service/utilities.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            handleHttpError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleHttpError(error)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ndynamic-angular-crud\nThis project is an attempt at creating a reusable CRUD (Create, Read, Update, Delete) data service in Angular to make it easier for performing CRUD operations against many different Database Tables.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 PaddingtonTheBear\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CrudServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CrudServiceModule\n\n\n\ncluster_CrudServiceModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCrudServiceModule\n\nCrudServiceModule\n\nAppModule -->\n\nCrudServiceModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nDataCreate\n\nDataCreate\n\nCrudServiceModule -->\n\nDataCreate->CrudServiceModule\n\n\n\n\n\nDataDelete\n\nDataDelete\n\nCrudServiceModule -->\n\nDataDelete->CrudServiceModule\n\n\n\n\n\nDataRead\n\nDataRead\n\nCrudServiceModule -->\n\nDataRead->CrudServiceModule\n\n\n\n\n\nDataService\n\nDataService\n\nCrudServiceModule -->\n\nDataService->CrudServiceModule\n\n\n\n\n\nDataUpdate\n\nDataUpdate\n\nCrudServiceModule -->\n\nDataUpdate->CrudServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n\n  serverUrl: 'http://localhost:3000/'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
